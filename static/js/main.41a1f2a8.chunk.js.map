{"version":3,"sources":["utils/GCCRestApi.ts","store/error/error.actions.ts","store/project/project.actions.ts","store/api/api.actions.ts","store/users/users.actions.ts","store/sdk/sdk.reducer.ts","store/sdk/sdk.actions.ts","store/project/project.reducer.ts","store/loadings/loadings.actions.ts","store/tasks/tasks.actions.ts","components/common/TablePagination.tsx","components/AppBar.tsx","components/common/Loader.tsx","components/common/MultiSelectList.tsx","components/common/Table.tsx","store/contentTypes/contentTypes.actions.ts","store/contentItems/contentItems.actions.ts","styles/FilterIcon.svg","components/FilterBar.tsx","components/ContentItems.tsx","components/SubmissionCreateForm.tsx","components/Tasks.tsx","components/SubmissionFilterBar.tsx","components/Submissions.tsx","Router.tsx","App.tsx","store/submissions/submissions.actions.ts","store/submissions/submissions.reducer.ts","store/tasks/tasks.reducer.ts","store/loadings/loadings.reducer.ts","store/contentItems/contentItems.reducer.ts","store/store.ts","store/error/error.reducer.ts","store/users/users.reducer.ts","store/api/api.reducer.ts","store/contentTypes/contentTypes.reducer.ts","index.tsx"],"names":["PAGE_SIZE","convertToFormData","item","formData","FormData","keys","Object","k","length","key","append","PDRestApi","apiKey","this","axios","defaults","headers","common","a","method","url","then","data","response_data","pageNumber","filterObject","page_number","page_size","taskId","selectedProject","task_id","connector_key","errorMessage","error_message","error_stacktrace","id","submission_id","selectedSubmission","dataObj","metadata","task_ids","task_metadata","SET_ERROR","setError","value","type","SET_PROJECT","SET_PROJECTS","SET_PROJECT_CONFIG","setProject","setProjectConfig","SET_API","SET_USERS","setUsers","defaultSdk","connected","params","apiUrl","dueDate","fileType","hubId","maxContentInSubmission","projects","statuses","ready","inProgress","translated","templates","vse","SET_SDK","setSDK","defaultState","selectedProjectConfig","SET_CONTENT","SET_TABLE","SET_CREATE","SET_LOADING_BY_ID","setContentLoader","setTableLoader","setLoaderById","setCreateLoader","SET_TASKS","SET_TASKS_PAGINATION","setTasks","setPagination","getAllLocalization","contentItem","localizations","related","size","page","localizationPage","items","getItems","concat","totalElements","number","throttled","throttle","getLocalizedAfterJobStarted","locale","localized","ContentItem","allLocalized","find","getAllTasks","Api","tasks","submissionId","getTasks","total_records_count","tasks_list","filter","status","getContentItemToUpdate","unique_identifier","dcManagement","contentItems","get","sourceContentItem","contentItemToUpdate","localize","defaultValue","typeFromPathItem","expression","ensureField","node","pathString","fieldType","path","jsonpath","parse","root","i","next","applyToItem","translations","body","updatedBodyObj","forEach","apply","update","toJSON","getUpdatedBody","_meta","deepApply","translatedTask","source_locale","mapping","ContentGraph","deepCopy","updatedBody","allNestedLocalized","nestedLocalized","nested","setLocale","downloadAndApply","dispatch","downloadTask","updateTaskMetadata","localizedId","assignWorkflowState","WorkflowState","confirmDownload","message","errorTask","getState","submissions","pagination","current_page_number","total_result_pages_count","map","el","due_date","state","totalCount","toString","TablePagination","changePage","startRef","useRef","endRef","elseRef","useEffect","current","addEventListener","Pagination","count","defaultPage","siblingCount","boundaryCount","renderItem","PaginationItem","ref","className","onChange","event","stopPropagation","useStyles","makeStyles","navbar","backgroundColor","navBarContainer","display","width","justifyContent","alignItems","padding","formControl","filledInput","buttonsBlock","textAlign","marginLeft","LinkRouter","props","Link","component","RouterLink","NavBar","useDispatch","classes","useSelector","breadcrumbNameMap","label","getSubmissions","buttons","IconButton","title","onClick","color","to","underline","Button","variant","style","visibility","AppBar","position","Toolbar","disableGutters","FormControl","Select","filled","inputProps","margin","e","currentTarget","connector_name","MenuItem","pathnames","location","pathname","split","x","lastPath","Breadcrumbs","_value","index","last","slice","join","Typography","loadingDots","height","loadingDotsDot","animation","borderRadius","marginRight","animationDelay","Loader","createStyles","maxHeight","overflow","border","subheader","background","borderBottom","MultiSelectList","locales","changeTargetLocales","selectedLocales","React","useState","checked","setChecked","List","ListSubheader","locale_label","connector_locale","labelId","ListItem","role","undefined","dense","button","currentIndex","indexOf","newChecked","push","splice","ListItemText","primary","Table","columns","rowClick","currentPage","checkBox","getSelectedIds","selected","setSelected","found","reduce","accumulator","checkedAll","Paper","TableContainer","stickyHeader","TableHead","TableRow","TableCell","Checkbox","disabled","target","newSelecteds","n","newUnselecteds","column","align","minWidth","TableBody","row","isItemSelected","onDoubleClick","isFunction","hover","tabIndex","sel","handleClick","ind","format","defaultProps","SET_CONTENT_TYPES","SET_CONTENT_ITEMS","SET_CONTENT_ITEMS_PAGINATION","SET_FACETS","SET_FILTER","setContent","setFacets","setFilter","getAllContentTypes","hub","contentTypes","list","contentTypePage","getContentItems","onlyFacets","sdk","contentTypesList","usersList","users","project","Math","ceil","assigneeFilter","assignees","facetAs","field","values","uris","dependency","uri","toLowerCase","hubs","facet","fields","name","returnEntities","query","repositories","text","sort","facets","content","_facets","compact","_id","user","userId","firstName","lastName","parseInt","contentRepositories","schema","ct","contentTypeUri","settings","Promise","all","assignee","mappedContent","totalPages","filterBtn","minHeight","filterBar","filterStatus","flexWrap","cursor","textDecoration","fontSize","fontWeight","filterName","fontFamily","filterValue","popover","filterHeading","lineHeight","boxShadow","filterOptions","transition","marginBottom","outline","radio","FilterStatus","onClear","FilterBar","appliedFilter","filterRef","onRemoveFilterValue","currentList","includes","FilterBlock","keyName","options","FormLabel","FormGroup","FormControlLabel","control","handleChange","currentRepo","clearFilter","setFilterValue","handleSetFilter","popupId","popupState","bindTrigger","alt","src","FilterIcon","Popover","bindPopover","anchorReference","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","close","TextField","placeholder","bindToggle","filterItem","applyFilter","RadioGroup","Radio","Divider","flexItem","orientation","ContentItems","loadings","slicedData","paper","flexDirection","container","marginTop","divider","submitButton","right","top","select","SubmissionCreateForm","prevSubmitter","localStorage","getItem","JSON","submitter","setSubmitter","selectedTemplate","setTemplate","selectedContent","setSelectedContent","dueDateParam","create","sourceLocales","supported_locales","is_source","targetLocales","defaultData","workflow","sourceLocale","Date","getTime","additionalInstruction","additional","config","formValues","setFormValues","handleSetAdditional","keyVal","onSubmit","preventDefault","createSubmission","elevation","square","required","InputLabelProps","shrink","DatePicker","autoOk","minDate","date","Autocomplete","getOptionLabel","option","_e","newValue","setItem","stringify","renderInput","InputLabel","outlined","template","additionalInstructions","customParameters","customConfig","workflows","multiline","rows","submission_options","attributes","enabled","is_multiselect","is_mandatory","multiple","verticalAlign","icon","menuIcon","TASK_STATUSES","Translate","Completed","Delivered","Tasks","loadingIds","SDK","locale_display_name","targetLocale","timestamp","toLocaleDateString","replaceAll","is_error","Icon","Menu","bindMenu","target_locale","applicationNavigator","href","openContentItem","returnHref","window","open","state_name","cancelTask","SubmissionFilterBar","onRemoveTextFilter","Array","isArray","Boolean","handleOptionChange","SUBMISSION_STATUSES","submission_name","is_overdue","submitters","fullWidth","freeSolo","_event","onInputChange","withRouter","history","languageJobs","job","setSelectedSubmission","submission","failedCount","allTasks","cancelSubmission","RouterComponent","table","exact","lastSlash","lastIndexOf","substring","createBrowserHistory","basename","svg","theme","createTheme","palette","light","main","dark","contrastText","App","error","Warning","ThemeProvider","Snackbar","autoHideDuration","Router","SET_SUBMISSIONS","SET_SELECTED_SUBMISSION","SET_PAGINATION","CHANGE_SUB_PAGE","SET_SUB_FILTER","setTasksPagination","search_string","is_redelivery","globalFilter","storedFilter","currentFilter","acc","tags","submission_list","hubContentTypes","idMappingTable","contentItemId","contentType","defaultVizObject","visualizations","viz","default","templatedUri","defaultViz","replace","contextUrl","translatableFields","fileJson","nodes","ContentLink","isContentLink","objJsonStr","createNodeFile","file","Blob","public_preview_url","file_type","content_id","submissionData","instructions","content_list","content_list_locale","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunkMiddleware","logger","init","extension","installation","instance","baseURL","sdkInited","DynamicContent","client","GCCInstance","GCCRestApi","getProjects","getProjectConfig","ReactDOM","render","utils","DateFnsUtils","document","getElementById"],"mappings":"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","file":"static/js/main.41a1f2a8.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport {\n  Project,\n  SelectedProjectConfigInterface,\n  SubmissionFilterInt,\n  SubmissionInt,\n  TaskInterface,\n} from '../types/types';\n\nexport const PAGE_SIZE = 20;\n\nconst convertToFormData = (item: any) => {\n  const formData = new FormData();\n  const keys = Object.keys(item);\n\n  for (let k = keys.length - 1; k >= 0; k--) {\n    const key = keys[k];\n    if (item[key]) {\n      formData.append(key, item[key] || '');\n    }\n  }\n\n  return formData;\n};\n\ninterface ApiParams {\n  apiKey: string;\n}\n\nclass PDRestApi {\n  readonly apiKey: string;\n\n  constructor({ apiKey }: ApiParams) {\n    this.apiKey = apiKey;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    axios.defaults.headers.common['api-key'] = apiKey;\n  }\n\n  async getProjects(): Promise<Project[]> {\n    return axios({\n      method: 'GET',\n      url: '/connector/list',\n    }).then(\n      ({ data }: AxiosResponse<{ response_data: Project[] }>) =>\n        data?.response_data\n    );\n  }\n\n  async getProjectConfig(key: string): Promise<SelectedProjectConfigInterface> {\n    return axios({\n      method: 'GET',\n      url: `/connector/config?connector_key=${key}`,\n    }).then(\n      ({\n        data,\n      }: AxiosResponse<{ response_data: SelectedProjectConfigInterface }>) =>\n        data.response_data\n    );\n  }\n\n  async getSubmissions(\n    pageNumber: number,\n    filterObject: SubmissionFilterInt\n  ): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'submission/list',\n      data: {\n        page_number: pageNumber,\n        page_size: PAGE_SIZE,\n        ...filterObject,\n      },\n    }).then(({ data }) => data.response_data);\n  }\n\n  async cancelTask(taskId: string, selectedProject: string): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'task/cancel',\n      data: {\n        task_id: taskId,\n        connector_key: selectedProject,\n      },\n    }).then(({ data }) => data.response_data);\n  }\n\n  async errorTask(\n    taskId: string,\n    selectedProject: string,\n    errorMessage: string\n  ): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'task/error',\n      data: {\n        task_id: taskId,\n        error_message: errorMessage,\n        error_stacktrace: '',\n        connector_key: selectedProject,\n      },\n    }).then(({ data }) => data.response_data);\n  }\n\n  async cancelSubmission(id: number, selectedProject: string): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'submission/cancel',\n      data: {\n        submission_id: id,\n        connector_key: selectedProject,\n      },\n    }).then(\n      ({ data }: AxiosResponse<{ response_data: SubmissionInt }>) =>\n        data.response_data\n    );\n  }\n\n  async getTasks({\n    selectedProject,\n    selectedSubmission,\n    pageNumber,\n  }: {\n    pageNumber: number;\n    selectedProject: string;\n    selectedSubmission: string;\n  }): Promise<TaskInterface[]> {\n    return axios({\n      method: 'GET',\n      url: `submission/tasks?submission_id=${selectedSubmission}&connector_key=${selectedProject}&page_number=${pageNumber}&page_size=${PAGE_SIZE}`,\n    }).then(\n      ({ data }: AxiosResponse<{ response_data: TaskInterface[] }>) =>\n        data.response_data\n    );\n  }\n\n  async createSubmission(dataObj: SubmissionInt): Promise<SubmissionInt> {\n    return axios({\n      method: 'POST',\n      url: 'content/submit',\n      data: dataObj,\n    }).then(\n      ({ data }: AxiosResponse<{ response_data: SubmissionInt }>) =>\n        data.response_data\n    );\n  }\n\n  async createNode(dataObj: any): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'content/upload/data',\n      data: convertToFormData(dataObj),\n    }).then(({ data }) => data.response_data);\n  }\n\n  async createNodeFile(dataObj: any): Promise<{ content_id: string }> {\n    return axios({\n      method: 'POST',\n      url: 'content/upload/file',\n      data: convertToFormData(dataObj),\n    }).then(({ data }) => data.response_data);\n  }\n\n  async downloadTask(taskId: string, selectedProject: string): Promise<any> {\n    return axios({\n      method: 'GET',\n      url: `task/download?task_id=${taskId}&connector_key=${selectedProject}`,\n    }).then(({ data }) => data);\n  }\n\n  async updateTaskMetadata(\n    taskId: string,\n    selectedProject: string,\n    metadata: any\n  ): Promise<any> {\n    return axios({\n      method: 'PUT',\n      url: 'task/metadata',\n      data: {\n        task_ids: [taskId],\n        task_metadata: metadata,\n        connector_key: selectedProject,\n      },\n    }).then(({ data }) => data);\n  }\n\n  async confirmDownload(taskId: string, selectedProject: string): Promise<any> {\n    return axios({\n      method: 'POST',\n      url: 'task/download/confirm',\n      data: {\n        task_id: taskId,\n        connector_key: selectedProject,\n      },\n    }).then(({ data }) => data);\n  }\n}\n\nexport default PDRestApi;\n","export const SET_ERROR = 'SET_ERROR';\n\nexport const setError = (value: string) => ({\n  type: SET_ERROR,\n  value,\n});\n","import { SelectedProjectConfigInterface } from '../../types/types';\n\nexport const SET_PROJECT = 'SET_PROJECT';\nexport const SET_PROJECTS = 'SET_PROJECTS';\nexport const SET_PROJECT_CONFIG = 'SET_PROJECT_CONFIG';\n\nexport const setProject = (value: string) => ({\n  type: SET_PROJECT,\n  value,\n});\n\nexport const setProjectConfig = (value: SelectedProjectConfigInterface) => ({\n  type: SET_PROJECT_CONFIG,\n  value,\n});\n","export const SET_API = 'SET_API';\n\nexport const setApi = (value: any) => ({\n  type: SET_API,\n  value,\n});\n","import { UserInterface } from '../../types/types';\n\nexport const SET_USERS = 'SET_USERS';\n\nexport const setUsers = (value: UserInterface[]) => ({\n  type: SET_USERS,\n  value,\n});\n","import { AnyAction } from 'redux';\nimport { SET_SDK } from './sdk.actions';\nimport { SDKInterface } from '../../types/types';\n\nexport const defaultSdk = {\n  connected: false,\n  params: {\n    apiKey: '',\n    apiUrl: '',\n    dueDate: 7,\n    fileType: 'json',\n    hubId: '',\n    maxContentInSubmission: 50,\n    projects: [],\n    statuses: { ready: '', inProgress: '', translated: '' },\n    templates: [],\n    vse: '',\n  },\n};\n\nexport function sdkReducer(\n  state = defaultSdk,\n  action: AnyAction\n): SDKInterface {\n  switch (action.type) {\n    case SET_SDK:\n      return { ...state, ...(action.value as SDKInterface) };\n    default:\n      return state;\n  }\n}\n","import { DashboardExtension, init } from 'dc-extensions-sdk';\nimport { Dispatch } from 'redux';\nimport axios from 'axios';\nimport { DynamicContent } from 'dc-management-sdk-js';\nimport GCCRestApi from '../../utils/GCCRestApi';\nimport { setError } from '../error/error.actions';\nimport {\n  SET_PROJECTS,\n  setProject,\n  setProjectConfig,\n} from '../project/project.actions';\nimport { setApi } from '../api/api.actions';\nimport { setUsers } from '../users/users.actions';\nimport { ParamsInt, Project, SDKInterface } from '../../types/types';\nimport { defaultSdk } from './sdk.reducer';\n\nexport const SET_SDK = 'SET_SDK';\n\nexport const setSDK = (value: SDKInterface) => ({\n  type: SET_SDK,\n  value,\n});\n\nexport const fetchSDK = () => async (dispatch: Dispatch) => {\n  try {\n    const extension: DashboardExtension = await init();\n    const params: ParamsInt = {\n      ...defaultSdk.params,\n      ...extension.params.installation,\n      ...extension.params.instance,\n    };\n\n    if (!params.apiKey || !params.apiUrl) {\n      return dispatch(setError('Missing required installation parameters'));\n    }\n\n    axios.defaults.baseURL = params.apiUrl;\n\n    const sdkInited = {\n      SDK: extension,\n      params,\n      connected: true,\n      dcManagement: new DynamicContent({}, {}, extension && extension.client),\n    };\n\n    const GCCInstance = new GCCRestApi({\n      apiKey: params.apiKey || '',\n    });\n\n    const users = await extension.users.list();\n\n    const projects: Project[] = await GCCInstance.getProjects();\n    dispatch(setApi(GCCInstance));\n\n    dispatch(setSDK(sdkInited));\n    dispatch(setUsers(users));\n\n    dispatch({\n      type: SET_PROJECTS,\n      value: projects,\n    });\n\n    if (projects && projects.length) {\n      dispatch(setProject(projects[0].connector_key));\n      const config = await GCCInstance.getProjectConfig(\n        projects[0].connector_key\n      );\n      dispatch(setProjectConfig(config));\n    }\n\n    return sdkInited;\n  } catch (e: any) {\n    return dispatch(setError(e.toString()));\n  }\n};\n","import { AnyAction } from 'redux';\nimport {\n  SET_PROJECT,\n  SET_PROJECTS,\n  SET_PROJECT_CONFIG,\n} from './project.actions';\nimport {\n  Project,\n  ProjectStateInterface,\n  SelectedProjectConfigInterface,\n} from '../../types/types';\n\nconst defaultState: ProjectStateInterface = {\n  data: [],\n  selectedProject: '',\n  selectedProjectConfig: {},\n};\n\nexport function projectReducer(\n  state = defaultState,\n  action: AnyAction\n): ProjectStateInterface {\n  switch (action.type) {\n    case SET_PROJECT:\n      return {\n        ...state,\n        selectedProject: action.value as string,\n      };\n    case SET_PROJECTS:\n      // eslint-disable-next-line no-case-declarations,@typescript-eslint/no-unsafe-member-access\n      const project: Project | null =\n        action.value && action.value.length\n          ? (action.value[0] as Project)\n          : null;\n      return {\n        ...state,\n        data: [...(action.value as Project[])],\n        selectedProject: project ? project.connector_key : '',\n      };\n    case SET_PROJECT_CONFIG:\n      return {\n        ...state,\n        selectedProjectConfig: {\n          ...action.value,\n        } as SelectedProjectConfigInterface,\n      };\n    default:\n      return state;\n  }\n}\n","export const SET_CONTENT = 'SET_CONTENT';\nexport const SET_TABLE = 'SET_TABLE';\nexport const SET_CREATE = 'SET_CREATE';\nexport const SET_LOADING_BY_ID = 'SET_LOADING_BY_ID';\n\nexport const setContentLoader = (value: boolean) => ({\n  type: SET_CONTENT,\n  value,\n});\n\nexport const setTableLoader = (value: boolean) => ({\n  type: SET_TABLE,\n  value,\n});\n\nexport const setLoaderById = (id: number, value: boolean) => ({\n  type: SET_LOADING_BY_ID,\n  value,\n  id,\n});\n\nexport const setCreateLoader = (value: boolean) => ({\n  type: SET_CREATE,\n  value,\n});\n","import { Dispatch } from 'redux';\nimport jsonpath from 'jsonpath';\nimport throttle from 'lodash/throttle';\nimport {\n  WorkflowState,\n  ContentGraph,\n  ContentItem,\n  Page,\n} from 'dc-management-sdk-js';\nimport { AppDispatch, RootState } from '../store';\nimport { setError } from '../error/error.actions';\nimport {\n  setContentLoader,\n  setLoaderById,\n  setTableLoader,\n} from '../loadings/loadings.actions';\nimport {\n  Pagination,\n  RootStateInt,\n  SubmissionInt,\n  TaskInterface,\n} from '../../types/types';\nimport { getSubmissions } from '../submissions/submissions.actions';\n\nexport const SET_TASKS = 'SET_TASKS';\nexport const SET_TASKS_PAGINATION = 'SET_TASKS_PAGINATION';\n\nexport const setTasks = (value: TaskInterface[]) => ({\n  type: SET_TASKS,\n  value,\n});\n\nexport const setPagination = (value: Pagination) => ({\n  type: SET_TASKS_PAGINATION,\n  value,\n});\n\nconst getAllLocalization = async (\n  contentItem: ContentItem,\n  localizations: ContentItem[] = [],\n  pageNumber = 0\n): Promise<ContentItem[]> => {\n  const localizationPage: Page<ContentItem> =\n    await contentItem.related.localizations({ size: 100, page: pageNumber });\n  const items: ContentItem[] = localizationPage.getItems();\n  localizations = localizations.concat(items);\n\n  if (\n    localizationPage &&\n    localizationPage.page &&\n    localizationPage.page.totalElements &&\n    localizationPage.page.totalElements > localizations.length\n  ) {\n    return getAllLocalization(\n      contentItem,\n      localizations,\n      (localizationPage.page.number || 0) + 1\n    );\n  }\n\n  return localizations;\n};\n\nconst throttled = throttle(getAllLocalization, 1000);\n\nconst getLocalizedAfterJobStarted = async (\n  contentItem: ContentItem,\n  locale: string\n): Promise<ContentItem | undefined> => {\n  let localized: ContentItem | undefined = new ContentItem({});\n\n  do {\n    const allLocalized = await throttled(contentItem);\n    localized =\n      allLocalized &&\n      allLocalized.find(\n        ({ locale: contentLocale }: ContentItem) => contentLocale === locale\n      );\n  } while (!localized);\n\n  const allLocalized = await getAllLocalization(contentItem);\n  localized = allLocalized.find(\n    ({ locale: contentLocale }: ContentItem) => contentLocale === locale\n  );\n\n  return localized;\n};\n\nconst getAllTasks = async ({\n  Api,\n  tasks,\n  pageNumber,\n  selectedProject,\n  submissionId,\n}: any): Promise<TaskInterface[]> => {\n  const { total_records_count, tasks_list } = await Api.getTasks({\n    selectedProject,\n    selectedSubmission: submissionId,\n    pageNumber: pageNumber || 1,\n  });\n\n  tasks = tasks.concat(\n    tasks_list.filter(({ status }: any) => status === 'Completed')\n  );\n\n  if (total_records_count > tasks.length) {\n    return getAllTasks({\n      Api,\n      tasks,\n      pageNumber: pageNumber + 1,\n      selectedProject,\n      submissionId,\n    });\n  }\n\n  return tasks;\n};\n\nconst getContentItemToUpdate = async ({\n  locale,\n  unique_identifier,\n  dcManagement,\n}) => {\n  const sourceContentItem = await dcManagement.contentItems.get(\n    unique_identifier\n  );\n\n  const allLocalized = await getAllLocalization(sourceContentItem);\n  let contentItemToUpdate = allLocalized.find(\n    ({ locale: contentLocale }: any) => contentLocale === locale\n  );\n\n  if (!contentItemToUpdate) {\n    await sourceContentItem.related.localize([locale]);\n\n    const localized: ContentItem | undefined =\n      await getLocalizedAfterJobStarted(sourceContentItem, locale);\n\n    contentItemToUpdate = await dcManagement.contentItems.get(\n      localized && localized.id\n    );\n  } else {\n    contentItemToUpdate = await dcManagement.contentItems.get(\n      contentItemToUpdate.id\n    );\n  }\n\n  return {\n    contentItemToUpdate,\n    sourceContentItem,\n  };\n};\n\nexport const applyAllTranslations =\n  (submission: SubmissionInt) =>\n  async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      const {\n        Api,\n        projects,\n        sdk: { params, dcManagement },\n        submissions: {\n          pagination: { page },\n        },\n      }: RootStateInt = getState();\n      const failedCount = 0;\n\n      dispatch(setContentLoader(true));\n      dispatch(setLoaderById(submission.submission_id || 0, true));\n\n      const allTasks = await getAllTasks({\n        Api,\n        tasks: [],\n        pageNumber: 1,\n        selectedProject: projects.selectedProject,\n        submissionId: submission.submission_id,\n      });\n\n      for (let i = allTasks.length - 1; i >= 0; i--) {\n        const {\n          task_id = 0,\n          unique_identifier,\n          target_locale: { locale },\n        } = allTasks[i];\n        dispatch(setLoaderById(task_id, true));\n        await downloadAndApply(\n          {\n            dcManagement,\n            Api,\n            task_id,\n            unique_identifier,\n            locale,\n            selectedProject: projects.selectedProject,\n            params,\n            source_locale: submission.source_locale,\n          },\n          dispatch\n        );\n        dispatch(setLoaderById(task_id, false));\n      }\n\n      if (failedCount) {\n        dispatch(\n          setError(\n            `Failed to apply translation to ${failedCount} content items. Check, please, if localized content items exist`\n          )\n        );\n      }\n\n      dispatch(setLoaderById(submission.submission_id || 0, false));\n      dispatch(setContentLoader(false));\n      dispatch(getSubmissions(page || 0));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      dispatch(setContentLoader(false));\n    }\n  };\n\nconst defaultValue = (type: string) => {\n  switch (type) {\n    case 'array':\n      return [];\n    case 'string':\n      return '';\n    default:\n      return {};\n  }\n};\n\nconst typeFromPathItem = (item: any) => {\n  if (item.expression) {\n    switch (item.expression.type) {\n      case 'numeric_literal':\n        return 'array';\n      default:\n        break;\n    }\n  }\n\n  return 'object';\n};\n\nconst ensureField = (node: any, pathString: string, fieldType: string) => {\n  // Ensure the field referenced by the path exists.\n  const path = jsonpath.parse(pathString);\n\n  const root = node;\n\n  for (let i = 0; i < path.length; i++) {\n    const item = path[i];\n    if (item.expression) {\n      switch (item.expression.type) {\n        case 'root':\n          node = root;\n          break;\n        case 'identifier':\n        case 'string_literal':\n        case 'numeric_literal':\n          let next;\n          next = node[item.expression.value];\n\n          if (!next) {\n            // Field doesn't exist. Try to create it.\n            let type = fieldType;\n\n            if (i + 1 < path.length) {\n              type = typeFromPathItem(path[i + 1]);\n            }\n\n            next = defaultValue(type);\n            node[item.expression.value] = next;\n          }\n\n          node = next;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  return node;\n};\n\nconst applyToItem = async ({\n  contentItemToUpdate,\n  translations = [],\n  body,\n  updatedBodyObj,\n}) => {\n  translations.forEach(({ key, value }: any) => {\n    if (value) {\n      if (value != null) {\n        ensureField(updatedBodyObj, `$.${key}`, typeof value);\n      }\n\n      jsonpath.apply(updatedBodyObj, `$.${key}`, () =>\n        value && value.length && value.length === 1 ? value[0] : value\n      );\n    }\n  });\n\n  return contentItemToUpdate.related.update({\n    ...contentItemToUpdate.toJSON(),\n    body: {\n      ...contentItemToUpdate.body,\n      ...body,\n      ...updatedBodyObj,\n    },\n  });\n};\n\nconst getUpdatedBody = (contentItemToUpdate, contentItem) => ({\n  ...(contentItem && contentItem.body),\n  _meta: contentItemToUpdate?._meta ?? contentItem?.body?._meta,\n});\n\nconst deepApply = async ({\n  sourceContentItem,\n  contentItemToUpdate,\n  dcManagement,\n  translatedTask,\n  source_locale,\n  locale,\n}) => {\n  const mapping: any = {};\n\n  await ContentGraph.deepCopy(\n    [sourceContentItem.id],\n    dcManagement.contentItems.get,\n    async (contentItem, body) => {\n      if (mapping[contentItem.id]) {\n        return mapping[contentItem.id];\n      }\n\n      if (contentItemToUpdate && contentItem.id === sourceContentItem.id) {\n        const updatedBody = getUpdatedBody(contentItemToUpdate, contentItem);\n\n        return (mapping[contentItemToUpdate.id] = applyToItem({\n          contentItemToUpdate,\n          translations: translatedTask.translations,\n          body,\n          updatedBodyObj: updatedBody,\n        }));\n      }\n\n      if (source_locale && contentItem.locale === source_locale.locale) {\n        const allNestedLocalized = await getAllLocalization(contentItem);\n\n        let nestedLocalized = allNestedLocalized.find(\n          ({ locale: contentLocale }: any) => contentLocale === locale\n        );\n\n        nestedLocalized = await dcManagement.contentItems.get(\n          nestedLocalized && nestedLocalized.id\n        );\n\n        const updatedBodyObj = getUpdatedBody(nestedLocalized, contentItem);\n\n        const translations = translatedTask.nested[contentItem.id];\n\n        if (translations) {\n          if (!nestedLocalized && !contentItem.locale) {\n            await contentItem.related.setLocale(source_locale.locale);\n          }\n\n          if (!nestedLocalized) {\n            await contentItem.related.localize([locale]);\n\n            let localized: ContentItem | undefined =\n              await getLocalizedAfterJobStarted(contentItem, locale);\n\n            localized = await dcManagement.contentItems.get(\n              localized && localized.id\n            );\n\n            return (\n              localized &&\n              (mapping[localized.id] = await applyToItem({\n                contentItemToUpdate: localized,\n                translations,\n                body,\n                updatedBodyObj,\n              }))\n            );\n          }\n\n          return (\n            nestedLocalized &&\n            (mapping[nestedLocalized.id] = await applyToItem({\n              contentItemToUpdate: nestedLocalized,\n              translations,\n              body,\n              updatedBodyObj,\n            }))\n          );\n        }\n      }\n\n      return (mapping[contentItem.id] = contentItem);\n    }\n  );\n};\n\nconst downloadAndApply = async (\n  {\n    dcManagement,\n    selectedProject,\n    Api,\n    task_id,\n    unique_identifier,\n    locale,\n    params,\n    source_locale,\n  }: any,\n  dispatch: Dispatch<any>\n) => {\n  try {\n    const translatedTask = await Api.downloadTask(task_id, selectedProject);\n\n    const { sourceContentItem, contentItemToUpdate } =\n      await getContentItemToUpdate({\n        locale,\n        dcManagement,\n        unique_identifier,\n      });\n\n    await deepApply({\n      sourceContentItem,\n      contentItemToUpdate,\n      dcManagement,\n      translatedTask,\n      source_locale,\n      locale,\n    });\n\n    await Api.updateTaskMetadata(task_id, selectedProject, {\n      localizedId: contentItemToUpdate && contentItemToUpdate.id,\n    });\n\n    if (params.statuses && params.statuses.translated) {\n      await sourceContentItem.related.assignWorkflowState(\n        new WorkflowState({ id: params.statuses.translated })\n      );\n    }\n\n    await Api.confirmDownload(task_id, selectedProject);\n\n    return false;\n  } catch (e: any) {\n    dispatch(setError(e.message));\n    return Api.errorTask(task_id, selectedProject, e.message);\n  }\n};\n\nexport const downloadTask =\n  ({\n    task_id,\n    unique_identifier,\n    source_locale,\n    target_locale: { locale },\n  }: any) =>\n  async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      dispatch(setContentLoader(true));\n      const {\n        Api,\n        projects,\n        sdk: { params, dcManagement },\n        tasks: { pagination },\n      }: RootStateInt = getState();\n\n      if (!dcManagement) {\n        return dispatch(setError('No DC Management SDK found'));\n      }\n\n      await downloadAndApply(\n        {\n          dcManagement,\n          Api,\n          task_id,\n          unique_identifier,\n          locale,\n          selectedProject: projects.selectedProject,\n          params,\n          source_locale,\n        },\n        dispatch\n      );\n\n      dispatch(getTasks(pagination.page || 0));\n      return dispatch(setContentLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      return dispatch(setContentLoader(false));\n    }\n  };\n\nexport const cancelTask =\n  ({ task_id }: any) =>\n  async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      const { Api, projects }: any = getState();\n\n      dispatch(setContentLoader(true));\n\n      await Api.cancelTask(task_id, projects.selectedProject);\n\n      dispatch(getTasks(0));\n\n      dispatch(setContentLoader(false));\n    } catch (e: any) {\n      if (e && e.message) {\n        dispatch(setError(e.message));\n      } else {\n        dispatch(setError(e.toString()));\n      }\n      dispatch(setContentLoader(false));\n    }\n  };\n\nexport const getTasks =\n  (pageNumber?: number) =>\n  async (dispatch: Dispatch, getState: () => RootState) => {\n    try {\n      const {\n        Api,\n        submissions,\n        projects,\n        tasks: {\n          pagination: { page },\n        },\n      }: RootStateInt = getState();\n\n      dispatch(setTableLoader(true));\n\n      const {\n        current_page_number,\n        total_result_pages_count,\n        tasks_list = [],\n      } = await Api.getTasks({\n        selectedProject: projects.selectedProject,\n        selectedSubmission: submissions?.selectedSubmission?.submission_id || 0,\n        pageNumber: pageNumber || page || 1,\n      });\n\n      dispatch(\n        setTasks(\n          tasks_list.map((el: any) => {\n            el.due_date = submissions.selectedSubmission.due_date;\n            el.source_locale = submissions.selectedSubmission.source_locale;\n            el.state = submissions.selectedSubmission.state;\n            return el;\n          })\n        )\n      );\n      dispatch(\n        setPagination({\n          page: current_page_number,\n          totalCount: total_result_pages_count,\n        })\n      );\n      dispatch(setTableLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      dispatch(setTableLoader(false));\n    }\n  };\n","import React, { useRef, useEffect } from 'react';\nimport { Pagination, PaginationItem } from '@material-ui/lab';\n\ninterface TablePaginationInterface {\n  pagination: {\n    page: number;\n    totalCount: number;\n  };\n  changePage: (page: number) => void;\n}\n\nconst TablePagination = ({\n  pagination,\n  changePage,\n}: TablePaginationInterface) => {\n  const startRef = useRef<HTMLDivElement>(null);\n  const endRef = useRef<HTMLDivElement>(null);\n  const elseRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (startRef && startRef.current) {\n      startRef.current.addEventListener('click', () => {\n        changePage(2);\n      });\n    }\n\n    if (endRef && endRef.current) {\n      endRef.current.addEventListener('click', () => {\n        changePage(pagination.totalCount - 1);\n      });\n    }\n  });\n\n  return pagination.totalCount && pagination.totalCount > 1 ? (\n    <Pagination\n      page={pagination.page}\n      count={pagination.totalCount}\n      defaultPage={pagination.page}\n      siblingCount={0}\n      boundaryCount={1}\n      renderItem={(item: any) => (\n        <PaginationItem\n          {...item}\n          ref={\n            item.type === 'start-ellipsis'\n              ? startRef\n              : item.type === 'end-ellipsis'\n              ? endRef\n              : elseRef\n          }\n          page={\n            item.type === 'start-ellipsis'\n              ? 2\n              : item.type === 'end-ellipsis'\n              ? pagination.totalCount - 1\n              : item.page\n          }\n          className={`dc-pagination ${\n            item.type === 'start-ellipsis'\n              ? 'start-ellipsis'\n              : item.type === 'end-ellipsis'\n              ? 'end-ellipsis'\n              : ''\n          }`}\n        />\n      )}\n      onChange={(event, page) => {\n        event.stopPropagation();\n        changePage(page);\n      }}\n    />\n  ) : null;\n};\n\nexport default TablePagination;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Select,\n  FormControl,\n  makeStyles,\n  MenuItem,\n  Typography,\n  Breadcrumbs,\n  Link,\n  LinkProps,\n  Button,\n  IconButton,\n} from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { RootState } from '../store/store';\nimport { setProject } from '../store/project/project.actions';\nimport { getSubmissions } from '../store/submissions/submissions.actions';\nimport { getTasks } from '../store/tasks/tasks.actions';\nimport { ProjectStateInterface } from '../types/types';\nimport TablePagination from './common/TablePagination';\n\ninterface LinkRouterProps extends LinkProps {\n  to: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  navbar: {\n    backgroundColor: '#ffffff',\n  },\n  navBarContainer: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '0 20px',\n  },\n  formControl: {\n    width: '400px',\n  },\n  filledInput: {\n    padding: '15px 12px !important',\n  },\n  buttonsBlock: {\n    width: '300px',\n    textAlign: 'right',\n    '& > *': {\n      marginLeft: '30px',\n    },\n  },\n}));\n\nconst LinkRouter = (props: LinkRouterProps) => (\n  <Link {...props} component={RouterLink as any} />\n);\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { data, selectedProject }: ProjectStateInterface = useSelector(\n    (state: RootState) => state.projects\n  );\n  const breadcrumbNameMap: { [key: string]: any } = {\n    '/': {\n      label: 'Submissions',\n      pagination: useSelector((state: any) => state.submissions.pagination),\n      changePage: (page: number) => dispatch(getSubmissions(page)),\n      buttons: (\n        <>\n          <IconButton\n            title=\"Refresh\"\n            onClick={() => dispatch(getSubmissions())}\n            aria-label=\"refresh\"\n          >\n            <RefreshIcon />\n          </IconButton>\n          <LinkRouter color=\"inherit\" to=\"/create\" underline=\"none\">\n            <Button variant=\"contained\" color=\"primary\">\n              Create Submission\n            </Button>\n          </LinkRouter>\n        </>\n      ),\n    },\n    '/create': {\n      label: 'Create Submission',\n      buttons: (\n        <>\n          <LinkRouter color=\"inherit\" to=\"/\" underline=\"none\">\n            <Button variant=\"outlined\" color=\"primary\">\n              Back\n            </Button>\n          </LinkRouter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{\n              visibility: 'hidden',\n            }}\n          >\n            Create\n          </Button>\n        </>\n      ),\n    },\n    '/tasks': {\n      label: 'Tasks List',\n      pagination: useSelector((state: any) => state.tasks.pagination),\n      changePage: (page: number) => dispatch(getTasks(page)),\n      buttons: (\n        <>\n          <IconButton\n            title=\"Refresh\"\n            onClick={() => dispatch(getTasks())}\n            aria-label=\"refresh\"\n          >\n            <RefreshIcon />\n          </IconButton>\n          <LinkRouter color=\"inherit\" to=\"/\" underline=\"none\">\n            <Button variant=\"outlined\" color=\"primary\">\n              Back\n            </Button>\n          </LinkRouter>\n        </>\n      ),\n    },\n  };\n\n  return (\n    <AppBar classes={{ root: classes.navbar }} position=\"static\">\n      <Toolbar disableGutters variant=\"dense\">\n        <FormControl classes={{ root: classes.formControl }} variant=\"filled\">\n          <Select\n            variant=\"filled\"\n            value={selectedProject}\n            classes={{ filled: classes.filledInput }}\n            inputProps={{\n              margin: 'none',\n            }}\n            onChange={(e) =>\n              dispatch(setProject(e.currentTarget.value as string))\n            }\n          >\n            {data.map(({ connector_key, connector_name }) => (\n              <MenuItem key={connector_key} value={connector_key}>\n                {connector_name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <div className={classes.navBarContainer}>\n          <Route>\n            {({ location }) => {\n              const pathnames = location.pathname.split('/').filter((x) => x);\n              let lastPath = '/';\n              return (\n                <>\n                  <Breadcrumbs aria-label=\"breadcrumb\">\n                    <LinkRouter color=\"inherit\" to=\"/\" underline=\"none\">\n                      {breadcrumbNameMap['/'].label}\n                    </LinkRouter>\n                    {pathnames.map((_value, index) => {\n                      const last = index === pathnames.length - 1;\n                      const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n                      if (last && breadcrumbNameMap[to]) {\n                        lastPath = to;\n                      }\n                      return last && breadcrumbNameMap[to] ? (\n                        <Typography color=\"textPrimary\" key={to}>\n                          {breadcrumbNameMap[to].label}\n                        </Typography>\n                      ) : breadcrumbNameMap[to] ? (\n                        <LinkRouter\n                          color=\"inherit\"\n                          to={to}\n                          key={to}\n                          underline=\"none\"\n                        >\n                          {breadcrumbNameMap[to].label}\n                        </LinkRouter>\n                      ) : null;\n                    })}\n                  </Breadcrumbs>\n                  {breadcrumbNameMap[lastPath].pagination ? (\n                    <TablePagination\n                      pagination={breadcrumbNameMap[lastPath].pagination}\n                      changePage={breadcrumbNameMap[lastPath].changePage}\n                    />\n                  ) : null}\n                  {breadcrumbNameMap[lastPath].buttons ? (\n                    <div className={classes.buttonsBlock}>\n                      {breadcrumbNameMap[lastPath].buttons}\n                    </div>\n                  ) : null}\n                </>\n              );\n            }}\n          </Route>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  loadingDots: {\n    textAlign: 'center',\n    width: 'calc(100% - 20px)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    height: '50px',\n\n    '&.tableLoader': {\n      justifyContent: 'flex-start',\n    },\n    '&.tableLoader > div': {\n      height: '4px',\n      width: '4px',\n    },\n  },\n  loadingDotsDot: {\n    animation: 'dot-keyframes 1.5s infinite ease-in-out',\n    backgroundColor: '#666666',\n    borderRadius: '8px',\n    display: 'inline-block',\n    height: '8px',\n    width: '8px',\n    marginRight: '4px',\n\n    '&:nth-child(2)': {\n      animationDelay: '0.5s',\n    },\n    '&:nth-child(3)': {\n      animationDelay: '1s',\n    },\n  },\n}));\n\nconst Loader = ({ className = '' }: any) => {\n  const classes = useStyles();\n\n  return (\n    <div title=\"Loading...\" className={`${classes.loadingDots} ${className}`}>\n      <div className={classes.loadingDotsDot} />\n      <div className={classes.loadingDotsDot} />\n      <div className={classes.loadingDotsDot} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  ListSubheader,\n  ListItem,\n  List,\n  ListItemText,\n} from '@material-ui/core';\n\ninterface ListInterface {\n  locale_label: string;\n  connector_locale: string;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: 400,\n      maxHeight: 200,\n      overflow: 'auto',\n      border: '1px solid rgba(0, 0, 0, 0.09)',\n      borderRadius: 4,\n    },\n    subheader: {\n      background: '#fff',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.09)',\n    },\n  })\n);\n\nconst MultiSelectList = ({\n  locales = [],\n  changeTargetLocales,\n  selectedLocales,\n}: {\n  locales: ListInterface[];\n  selectedLocales: string[];\n  changeTargetLocales: (locales: string[]) => void;\n}) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState<string[]>(selectedLocales || []);\n\n  useEffect(() => {\n    if (selectedLocales) {\n      setChecked(selectedLocales);\n    }\n  }, [selectedLocales]);\n\n  const handleToggle = (value: string) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    if (changeTargetLocales) {\n      changeTargetLocales(newChecked);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List\n      className={classes.root}\n      subheader={\n        <ListSubheader classes={{ root: classes.subheader }} component=\"div\">\n          Target Locales\n        </ListSubheader>\n      }\n    >\n      {locales.map(({ locale_label, connector_locale }) => {\n        const labelId = `check-list-label-${connector_locale}`;\n\n        return (\n          <ListItem\n            key={connector_locale}\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(connector_locale)}\n            className={\n              checked.indexOf(connector_locale) !== -1 ? 'selected-item' : ''\n            }\n          >\n            <ListItemText\n              id={labelId}\n              primary={`${locale_label} (${connector_locale})`}\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MultiSelectList;\n","import React from 'react';\nimport {\n  makeStyles,\n  Table as TableComponent,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Checkbox,\n} from '@material-ui/core';\nimport isFunction from 'lodash/isFunction';\n\ninterface Column {\n  id: string;\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: any) => any;\n}\n\ninterface TableComponentProps {\n  columns: Column[];\n  data: object[];\n  currentPage: number;\n  maxContentInSubmission?: number;\n  checkBox?: boolean;\n  rowClick?(id: number): void;\n  getSelectedIds?: (content: string[]) => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst Table = ({\n  maxContentInSubmission = 50,\n  columns,\n  data,\n  rowClick,\n  currentPage = 0,\n  checkBox = false,\n  getSelectedIds = () => {},\n}: TableComponentProps) => {\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState<{ [key: string]: boolean }>(\n    {}\n  );\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds: { [key: string]: boolean } = {};\n      data.forEach((n: any) => {\n        newSelecteds[n.id] = true;\n      });\n\n      setSelected({\n        ...selected,\n        ...newSelecteds,\n      });\n      getSelectedIds(\n        Object.keys({\n          ...selected,\n          ...newSelecteds,\n        })\n      );\n\n      return;\n    }\n    const newUnselecteds: { [key: string]: boolean } = { ...selected };\n    data.forEach((n: any) => {\n      delete newUnselecteds[n.id];\n    });\n    setSelected(newUnselecteds);\n    getSelectedIds(Object.keys(newUnselecteds));\n  };\n\n  const isSelected = (id: string) => selected[id];\n\n  const handleClick = (id: string) => {\n    if (!selected[id]) {\n      setSelected({\n        ...selected,\n        [id]: true,\n      });\n      getSelectedIds(\n        Object.keys({\n          ...selected,\n          [id]: true,\n        })\n      );\n    } else {\n      const sel = { ...selected };\n      delete sel[id];\n      setSelected(sel);\n      getSelectedIds(Object.keys(sel));\n    }\n  };\n\n  const ids = data.map(({ id }: any) => id);\n  const found = ids.reduce(\n    (accumulator, id) => (selected[id] ? (accumulator += 1) : accumulator),\n    0\n  );\n\n  const checkedAll = data.length > 0 && found > 0 && data.length === found;\n  return (\n    <Paper className={classes.root}>\n      <TableContainer>\n        <TableComponent stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {checkBox ? (\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    color=\"primary\"\n                    checked={checkedAll}\n                    disabled={\n                      !checkedAll &&\n                      (Object.keys(selected).length >= maxContentInSubmission ||\n                        data.length > maxContentInSubmission)\n                    }\n                    onChange={handleSelectAllClick}\n                  />\n                </TableCell>\n              ) : null}\n              <TableCell>#</TableCell>\n              {columns.map((column, index) => (\n                <TableCell\n                  key={index}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row: any, index: number) => {\n              const isItemSelected = isSelected(row.id) || false;\n\n              return (\n                <TableRow\n                  onDoubleClick={() =>\n                    rowClick && isFunction(rowClick) && rowClick(row)\n                  }\n                  hover\n                  role=\"checkbox\"\n                  tabIndex={-1}\n                  key={`row_${index}`}\n                >\n                  {checkBox ? (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        disabled={\n                          !isItemSelected &&\n                          Object.keys(selected).length >= maxContentInSubmission\n                        }\n                        onChange={() => handleClick(row.id)}\n                      />\n                    </TableCell>\n                  ) : null}\n                  <TableCell key={`cell_${index}`}>\n                    {(currentPage - 1) * 10 + index + 1}\n                  </TableCell>\n                  {columns.map((column, ind) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell\n                        key={`cell_${index}_${ind}`}\n                        align={column.align}\n                      >\n                        {column.format && isFunction(column.format)\n                          ? column.format(value || row)\n                          : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </TableComponent>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nTable.defaultProps = {\n  maxContentInSubmission: 50,\n  checkBox: false,\n  rowClick: () => {},\n  getSelectedIds: () => {},\n};\n\nexport default Table;\n","import { ContentType } from 'dc-management-sdk-js';\n\nexport const SET_CONTENT_TYPES = 'SET_CONTENT_TYPES';\n\nexport const setContentTypes = (value: ContentType[]) => ({\n  type: SET_CONTENT_TYPES,\n  value,\n});\n","import { Dispatch } from 'redux';\nimport {\n  ContentItem,\n  ContentRepository,\n  ContentType,\n  EnumFacet,\n  Hub,\n  Page,\n} from 'dc-management-sdk-js';\nimport compact from 'lodash/compact';\nimport { setError } from '../error/error.actions';\nimport { RootState } from '../store';\nimport { setContentLoader } from '../loadings/loadings.actions';\nimport { setContentTypes } from '../contentTypes/contentTypes.actions';\nimport {\n  FacetsInt,\n  FilterInt,\n  Option,\n  Pagination,\n  RootStateInt,\n} from '../../types/types';\nimport { PAGE_SIZE } from '../../utils/GCCRestApi';\n\nexport const SET_CONTENT_ITEMS = 'SET_CONTENT_ITEMS';\nexport const SET_CONTENT_ITEMS_PAGINATION = 'SET_CONTENT_ITEMS_PAGINATION';\nexport const SET_FACETS = 'SET_FACETS';\nexport const SET_FILTER = 'SET_FILTER';\n\nexport const setContent = (value: ContentItem[]) => ({\n  type: SET_CONTENT_ITEMS,\n  value,\n});\n\nexport const setFacets = (value: FacetsInt) => ({\n  type: SET_FACETS,\n  value,\n});\n\nexport const setFilter = (value: FilterInt) => ({\n  type: SET_FILTER,\n  value,\n});\n\nexport const setPagination = (value: Pagination) => ({\n  type: SET_CONTENT_ITEMS_PAGINATION,\n  value,\n});\n\nconst getAllContentTypes = async (\n  hub: Hub,\n  data: ContentType[] = [],\n  pageNumber = 0\n): Promise<ContentType[]> => {\n  const contentTypePage: Page<ContentType> =\n    await hub.related.contentTypes.list({ size: 100, page: pageNumber });\n  const items = contentTypePage.getItems() as ContentType[];\n  data = data.concat(items);\n\n  if (\n    contentTypePage &&\n    contentTypePage.page &&\n    contentTypePage.page.totalElements &&\n    contentTypePage.page.totalElements > data.length\n  ) {\n    return getAllContentTypes(\n      hub,\n      data,\n      (contentTypePage.page.number || 0) + 1\n    );\n  }\n\n  return data;\n};\n\nexport const getContentItems =\n  (locale: string, pageNumber: number, filter?: any, onlyFacets?: boolean) =>\n  async (dispatch: Dispatch, getState: () => RootState) => {\n    try {\n      const {\n        sdk: {\n          dcManagement,\n          params: { projects, hubId, statuses },\n        },\n        contentTypes: { data: contentTypesList },\n        users: { data: usersList },\n        projects: { selectedProject },\n        contentItems: { data, pagination },\n      }: RootStateInt = getState();\n      if (!dcManagement) {\n        return dispatch(setError('No DC Management SDK found'));\n      }\n\n      dispatch(setContentLoader(true));\n\n      const project = projects.find((el) => el.id === selectedProject);\n\n      if (project && !project.contentTypes) {\n        return dispatch(setError('No Content Types found in project'));\n      }\n\n      if (data && Math.ceil(data.length / 10) >= pageNumber && !filter) {\n        dispatch(setContentLoader(false));\n        return dispatch(\n          setPagination({\n            page: pageNumber,\n            totalCount: pagination.totalCount,\n          })\n        );\n      }\n\n      const assigneeFilter: EnumFacet =\n        filter && filter.assignees && filter.assignees.length\n          ? {\n              facetAs: 'ENUM',\n              field: 'assignees',\n              filter: {\n                type: 'IN',\n                values: filter && filter.assignees,\n              },\n            }\n          : {\n              facetAs: 'ENUM',\n              field: 'assignees',\n            };\n\n      const uris: string[] = (project?.contentTypes || [])\n        .filter((el: any) => !el.dependency)\n        .map((el: any) => el.uri.toLowerCase());\n\n      const hub = await dcManagement.hubs.get(hubId);\n      const facets = await hub.related.contentItems.facet(\n        {\n          fields: [\n            {\n              facetAs: 'ENUM',\n              field: 'schema',\n              filter: {\n                type: 'IN',\n                values:\n                  filter && filter.contentTypes && filter.contentTypes.length\n                    ? filter.contentTypes.map((el: any) => el.toLowerCase())\n                    : uris,\n              },\n            },\n            {\n              facetAs: 'ENUM',\n              field: 'workflow.state',\n              name: 'workflow',\n              filter: {\n                type: 'IN',\n                values: [statuses && statuses.ready ? statuses.ready : ''],\n              },\n            },\n            {\n              facetAs: 'ENUM',\n              field: 'locale',\n              filter: {\n                type: 'IN',\n                values: [locale],\n              },\n            },\n            assigneeFilter,\n          ],\n          returnEntities: !onlyFacets,\n        },\n        {\n          query: `status:\"ACTIVE\"${\n            filter && filter.repositories\n              ? `contentRepositoryId:\"${filter.repositories}\"`\n              : ''\n          }${(filter && filter.text) || ''}`,\n          page: pageNumber - 1,\n          size: PAGE_SIZE,\n          sort: 'lastModifiedDate,desc',\n        }\n      );\n\n      const content = facets.getItems();\n      const contentTypes =\n        contentTypesList && !contentTypesList.length\n          ? await getAllContentTypes(hub)\n          : contentTypesList;\n\n      dispatch(setContentTypes(contentTypes));\n\n      if (facets && facets._facets) {\n        dispatch(\n          setFacets({\n            assignees: compact(\n              facets._facets.assignees.map(({ _id, count }) => {\n                const user = usersList.find(\n                  ({ id: userId }: { id: string }) => _id === userId\n                );\n\n                if (!user && _id === 'UNASSIGNED') {\n                  return {\n                    label: 'Unassigned',\n                    value: _id,\n                    count: parseInt(count, 10),\n                  };\n                }\n\n                return (\n                  user && {\n                    label: `${user.firstName} ${user.lastName}`,\n                    value: user.id,\n                    count: parseInt(count, 10),\n                  }\n                );\n              })\n            ) as Option[],\n            repositories: (\n              await hub.related.contentRepositories.list({ size: 100 })\n            )\n              .getItems()\n              .map((el: ContentRepository) => ({\n                label: el.label,\n                value: el.id,\n              })) as Option[],\n            contentTypes: compact(\n              facets._facets.schema.map(({ _id, count }) => {\n                if (_id && uris.indexOf(_id) >= 0) {\n                  const ct =\n                    contentTypes &&\n                    contentTypes.find(\n                      ({ contentTypeUri }: any) =>\n                        contentTypeUri &&\n                        contentTypeUri.toLowerCase() === _id.toLowerCase()\n                    );\n                  return (\n                    ct &&\n                    ct.settings && {\n                      label: ct.settings.label,\n                      value: ct.contentTypeUri,\n                      count: parseInt(count, 10),\n                    }\n                  );\n                }\n\n                return null;\n              })\n            ) as Option[],\n          })\n        );\n      }\n\n      if (onlyFacets) {\n        return dispatch(setContentLoader(false));\n      }\n\n      const mappedContent: ContentItem[] = await Promise.all(\n        content.map(async ({ id, label, schema, assignees = [] }) => {\n          const ct =\n            contentTypes &&\n            contentTypes.find(\n              ({ contentTypeUri }: any) => contentTypeUri === schema\n            );\n          return new ContentItem({\n            id,\n            label,\n            schema: ct || {},\n            assignees: assignees.map((assignee) =>\n              usersList.find(\n                ({ id: userId }: { id: string }) => assignee === userId\n              )\n            ),\n          });\n        })\n      );\n\n      dispatch(\n        setContent(filter ? mappedContent : [...data, ...mappedContent])\n      );\n\n      if (facets && facets.page && facets.page.number !== undefined) {\n        dispatch(\n          setPagination({\n            page: facets.page.number + 1,\n            totalCount: facets.page.totalPages || 0,\n          })\n        );\n      }\n\n      return dispatch(setContentLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      return dispatch(setContentLoader(false));\n    }\n  };\n","export default __webpack_public_path__ + \"static/media/FilterIcon.18d97e85.svg\";","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Popover,\n  Button,\n  makeStyles,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  FormLabel,\n  Radio,\n  Divider,\n  Checkbox,\n  FormGroup,\n  TextField,\n} from '@material-ui/core';\nimport PopupState, {\n  bindTrigger,\n  bindPopover,\n  bindToggle,\n} from 'material-ui-popup-state';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\nimport {\n  getContentItems,\n  setFilter as setFilterValue,\n} from '../store/contentItems/contentItems.actions';\nimport { FilterBarInterface, FilterInt, Option } from '../types/types';\nimport FilterIcon from '../styles/FilterIcon.svg';\n\nexport const useStyles = makeStyles(() => ({\n  filterBtn: {\n    backgroundColor: '#c5c5c5',\n    padding: 0,\n    margin: 0,\n    height: 24,\n    width: 24,\n    minHeight: 24,\n    minWidth: 24,\n    borderRadius: 3,\n    '& image': {\n      width: 24,\n      height: 24,\n    },\n    '&:hover': {\n      backgroundColor: '#c5c5c5',\n    },\n  },\n  filterBar: {\n    display: 'flex',\n    margin: '10px 0',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  filterStatus: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '& > div': {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    '& button': {\n      height: 12,\n      width: 12,\n      minWidth: 12,\n      minHeight: 12,\n      cursor: 'pointer',\n      margin: '2px 0 0 8px',\n      '& svg': {\n        width: 13,\n        height: 13,\n      },\n    },\n    '& > button, a': {\n      border: 'none',\n      borderRadius: 8,\n      padding: '2px 8px',\n      margin: '4px 8px 4px 0',\n      backgroundColor: '#f2f2f2',\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      width: 'unset',\n      height: 'unset',\n      minWidth: 'unset',\n      minHeight: 'unset',\n    },\n    '& label': {\n      fontSize: 12,\n      color: '#333',\n      fontWeight: 400,\n      margin: '3px 0',\n      cursor: 'pointer',\n    },\n  },\n  filterName: {\n    fontSize: 12,\n    color: '#666',\n    margin: '0 8px 0 0',\n    fontWeight: 400,\n    fontFamily: 'Roboto',\n  },\n  filterValue: {\n    display: 'flex',\n    margin: '5px 0',\n    '& button': {\n      height: 12,\n      width: 12,\n      minWidth: 12,\n      minHeight: 12,\n      cursor: 'pointer',\n      margin: '2px 0 0 8px',\n      '& svg': {\n        width: 13,\n        height: 13,\n      },\n    },\n    '& > button, a': {\n      border: 'none',\n      borderRadius: 8,\n      padding: '2px 8px',\n      margin: '4px 8px 4px 0',\n      backgroundColor: '#f2f2f2',\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      width: 'unset',\n      height: 'unset',\n      minWidth: 'unset',\n      minHeight: 'unset',\n    },\n  },\n  popover: {\n    minWidth: 600,\n  },\n  filterHeading: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottom: '1px solid #e5e5e5',\n\n    '& h3': {\n      fontSize: 14,\n      fontWeight: 500,\n      margin: 0,\n    },\n\n    '& button': {\n      marginRight: 20,\n      height: 30,\n      lineHeight: 30,\n      minHeight: 30,\n      borderRadius: 3,\n      boxShadow: 'none!important',\n    },\n  },\n  filterOptions: {\n    display: 'flex',\n    padding: '0 8px 16px 16px',\n\n    '& > fieldset': {\n      minWidth: 200,\n    },\n\n    '& legend': {\n      fontSize: 14,\n      fontWeight: 500,\n      padding: '23px 0',\n      color: 'rgba(0, 0, 0, 0.87)',\n    },\n\n    '& span': {\n      transition: 'opacity .15s',\n      marginBottom: 0,\n      outline: 'none',\n      fontSize: 13,\n    },\n\n    '& hr': {\n      margin: '0 16px',\n    },\n  },\n  radio: {\n    '& svg': {\n      width: 16,\n      height: 16,\n    },\n  },\n}));\n\nexport const FilterStatus = ({ label, onClear }: any) => (\n  <button type=\"reset\">\n    {label}\n    <IconButton size=\"small\" onClick={onClear}>\n      <ClearIcon />\n    </IconButton>\n  </button>\n);\n\nconst FilterBar = ({\n  facets,\n  locale,\n  filter: appliedFilter,\n}: FilterBarInterface) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const filterRef = useRef(null);\n  const [filter, setFilter] = useState<FilterInt>(appliedFilter);\n\n  useEffect(() => {\n    dispatch(getContentItems(locale, 1, filter, true));\n  }, [filter, locale, dispatch]);\n\n  const applyFilter = (\n    filterItem: FilterInt,\n    popupState: any,\n    onlyFacets?: boolean\n  ) => {\n    dispatch(setFilterValue(filterItem));\n    dispatch(getContentItems(locale, 1, filterItem, onlyFacets));\n    popupState.close();\n  };\n\n  const onRemoveFilterValue = (\n    key: 'assignees' | 'contentTypes',\n    id: string\n  ) => {\n    const currentList: string[] = filter[key] || [];\n\n    if (currentList.includes(id)) {\n      currentList.splice(currentList.indexOf(id), 1);\n\n      setFilter({\n        ...filter,\n        [key]: currentList,\n      });\n\n      dispatch(\n        getContentItems(locale, 1, {\n          ...filter,\n          [key]: currentList,\n        })\n      );\n    }\n  };\n\n  const handleChange = (key: 'assignees' | 'contentTypes', id: any) => {\n    const currentList: string[] = filter[key] || [];\n\n    if (currentList.includes(id)) {\n      currentList.splice(currentList.indexOf(id), 1);\n\n      return setFilter({\n        ...filter,\n        [key]: currentList,\n      });\n    }\n\n    return setFilter({\n      ...filter,\n      [key]: [...currentList, id],\n    });\n  };\n\n  const FilterBlock = ({\n    name,\n    keyName,\n    options,\n  }: {\n    name: string;\n    keyName: 'assignees' | 'contentTypes';\n    options: Option[];\n  }) => (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">{name}</FormLabel>\n      <FormGroup aria-label={name}>\n        {options.map(({ label, value, count }: Option, index) => (\n          <FormControlLabel\n            key={index}\n            value={value}\n            control={\n              <Checkbox\n                checked={filter[keyName] && filter[keyName].includes(value)}\n                className={classes.radio}\n                onChange={() => handleChange(keyName, value || '')}\n                color=\"primary\"\n              />\n            }\n            label={`${label} (${count})`}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n  );\n\n  const currentRepo = facets.repositories.find(\n    (el) => el.value === filter.repositories\n  );\n\n  const clearFilter = (key = 'repositories') => {\n    setFilter({\n      ...filter,\n      [key]: '',\n    });\n    dispatch(\n      setFilterValue({\n        ...filter,\n        [key]: '',\n      })\n    );\n\n    dispatch(\n      getContentItems(locale, 1, {\n        ...filter,\n        [key]: '',\n      })\n    );\n  };\n\n  const handleSetFilter = (e, key = 'repositories') => {\n    setFilter({\n      ...filter,\n      [key]: e.target.value || '',\n    });\n  };\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div className={classes.filterBar}>\n          <div className={classes.filterStatus}>\n            <h3 className={classes.filterName}>Repository</h3>\n            {appliedFilter.repositories ? (\n              <FilterStatus\n                popupState={popupState}\n                label={currentRepo && currentRepo.label}\n                value={appliedFilter.repositories}\n                onClear={() => clearFilter()}\n              />\n            ) : (\n              <a {...bindTrigger(popupState)}>All</a>\n            )}\n            <h3 className={classes.filterName}>Assignee</h3>\n            {appliedFilter.assignees.length ? (\n              appliedFilter.assignees.map((id) => {\n                const user = facets.assignees.find((el) => el.value === id);\n\n                return (\n                  user && (\n                    <FilterStatus\n                      popupState={popupState}\n                      label={user && user.label}\n                      value={id}\n                      onClear={() => onRemoveFilterValue('assignees', id)}\n                    />\n                  )\n                );\n              })\n            ) : (\n              <a {...bindTrigger(popupState)}>All</a>\n            )}\n            <h3 className={classes.filterName}>Content Type</h3>\n            {appliedFilter.contentTypes.length ? (\n              appliedFilter.contentTypes.map((id) => {\n                const ct = facets.contentTypes.find((el) => el.value === id);\n                return (\n                  ct && (\n                    <FilterStatus\n                      popupState={popupState}\n                      label={ct && ct.label}\n                      value={id}\n                      onClear={() => onRemoveFilterValue('contentTypes', id)}\n                    />\n                  )\n                );\n              })\n            ) : (\n              <a {...bindTrigger(popupState)}>All</a>\n            )}\n            {filter.text ? (\n              <div>\n                <h3 className={classes.filterName}>Search</h3>\n                <div className={classes.filterValue}>\n                  <FilterStatus\n                    popupState={popupState}\n                    label={appliedFilter.text}\n                    value={appliedFilter.text}\n                    onClear={() => clearFilter('text')}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          <IconButton\n            ref={filterRef}\n            className={classes.filterBtn}\n            aria-label=\"toggle\"\n            size=\"small\"\n            {...bindTrigger(popupState)}\n          >\n            <img alt=\"filter icon\" src={FilterIcon} />\n          </IconButton>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorReference=\"anchorEl\"\n            anchorEl={filterRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            onClose={() => {\n              setFilter(appliedFilter);\n              popupState.close();\n            }}\n          >\n            <div className={classes.popover}>\n              <div className={classes.filterHeading}>\n                <TextField\n                  placeholder=\"Search\"\n                  name=\"label\"\n                  value={filter.text}\n                  style={{\n                    minWidth: 250,\n                  }}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    handleSetFilter(e, 'text');\n                  }}\n                />\n                <div>\n                  <Button variant=\"text\" {...bindToggle(popupState)}>\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => applyFilter(filter, popupState)}\n                  >\n                    Apply\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.filterOptions}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Repository</FormLabel>\n                  <RadioGroup\n                    aria-label=\"Repository\"\n                    name=\"repository\"\n                    value={filter.repositories}\n                    onChange={(e) => handleSetFilter(e)}\n                  >\n                    <FormControlLabel\n                      value=\"\"\n                      control={\n                        <Radio className={classes.radio} color=\"primary\" />\n                      }\n                      label=\"All\"\n                    />\n                    {facets.repositories.map(({ value, label }, index) => (\n                      <FormControlLabel\n                        key={index}\n                        value={value}\n                        control={\n                          <Radio className={classes.radio} color=\"primary\" />\n                        }\n                        label={label}\n                      />\n                    ))}\n                  </RadioGroup>\n                </FormControl>\n                <Divider flexItem orientation=\"vertical\" />\n                <FilterBlock\n                  name=\"Assignees\"\n                  keyName=\"assignees\"\n                  options={facets.assignees}\n                />\n                <Divider flexItem orientation=\"vertical\" />\n                <FilterBlock\n                  name=\"Content Types\"\n                  keyName=\"contentTypes\"\n                  options={facets.contentTypes}\n                />\n              </div>\n            </div>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n};\n\nexport default FilterBar;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { RootState } from '../store/store';\nimport Table from './common/Table';\nimport Loader from './common/Loader';\nimport FilterBar from './FilterBar';\nimport TablePagination from './common/TablePagination';\nimport { getContentItems } from '../store/contentItems/contentItems.actions';\nimport { ContentItemsInterface } from '../types/types';\nimport { PAGE_SIZE } from '../utils/GCCRestApi';\n\nconst useStyles = makeStyles(() => ({\n  navBarContainer: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nconst ContentItems = ({\n  locale,\n  getSelectedIds,\n}: {\n  locale: string;\n  getSelectedIds: (content: string[]) => void;\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { data, pagination, facets, filter }: ContentItemsInterface =\n    useSelector((state: RootState) => state.contentItems);\n  const { content }: any = useSelector((state: RootState) => state.loadings);\n  const {\n    params: { maxContentInSubmission = 50 },\n  }: any = useSelector((state: RootState) => state.sdk);\n\n  const slicedData = data.slice(\n    (pagination.page - 1) * PAGE_SIZE,\n    (pagination.page - 1) * PAGE_SIZE + PAGE_SIZE\n  );\n\n  const columns = [\n    {\n      id: 'label',\n      label: 'Name',\n    },\n    {\n      id: 'assignees',\n      label: 'Assign',\n      format: (assignees: any[]) =>\n        assignees && assignees.length\n          ? assignees\n              .map(({ firstName, lastName }) => `${firstName} ${lastName}`)\n              .join(', ')\n          : '',\n    },\n    {\n      id: 'schema',\n      label: 'Content Type',\n      format: (schema: any) =>\n        schema && schema.settings ? schema.settings.label : '',\n    },\n  ];\n\n  useEffect(() => {\n    if (pagination && !pagination.page) {\n      dispatch(getContentItems(locale, 1));\n    }\n  }, [pagination, dispatch, locale]);\n\n  return (\n    <>\n      {content ? <Loader className=\"content-loader\" /> : null}\n      <FilterBar facets={facets} locale={locale} filter={filter} />\n\n      <div className={classes.navBarContainer}>\n        <TablePagination\n          pagination={pagination}\n          changePage={(page: number) => dispatch(getContentItems(locale, page))}\n        />\n      </div>\n\n      <Table\n        maxContentInSubmission={maxContentInSubmission}\n        checkBox\n        getSelectedIds={getSelectedIds}\n        columns={columns}\n        data={slicedData}\n        currentPage={pagination.page}\n      />\n    </>\n  );\n};\n\nexport default ContentItems;\n","import React, { useState } from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  makeStyles,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Divider,\n  Button,\n} from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { RootState } from '../store/store';\nimport {\n  LoadingsInterface,\n  ProjectStateInterface,\n  SDKInterface,\n  UserInterface,\n} from '../types/types';\nimport MultiSelectList from './common/MultiSelectList';\nimport ContentItems from './ContentItems';\nimport { createSubmission } from '../store/submissions/submissions.actions';\nimport Loader from './common/Loader';\nimport { setError } from '../store/error/error.actions';\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: '20px',\n    width: '50%',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    position: 'relative',\n  },\n  container: {\n    display: 'flex',\n    height: 'calc(100vh - 70px)',\n  },\n  formControl: {\n    display: 'block',\n    width: 400,\n    marginTop: 30,\n    '& > div': {\n      width: '100%',\n    },\n  },\n  divider: {\n    margin: '20px 0',\n  },\n  submitButton: {\n    position: 'absolute',\n    right: 28,\n    top: 14,\n  },\n  select: {},\n}));\n\nconst SubmissionCreateForm = () => {\n  const dispatch = useDispatch();\n  const prevSubmitter = localStorage.getItem('submission_submitter');\n  const classes = useStyles();\n  const [submitter, setSubmitter] = React.useState<any>(\n    prevSubmitter ? JSON.parse(prevSubmitter) : null\n  );\n  const [selectedTemplate, setTemplate] = useState<any>(null);\n  const [selectedContent, setSelectedContent] = useState<string[]>([]);\n  const { selectedProjectConfig }: ProjectStateInterface = useSelector(\n    (state: RootState) => state.projects\n  );\n  const {\n    params: { templates, dueDate: dueDateParam },\n  }: SDKInterface = useSelector((state: RootState) => state.sdk);\n  const { data }: { data: UserInterface[] } = useSelector(\n    (state: RootState) => state.users\n  );\n  const { create }: LoadingsInterface = useSelector(\n    (state: RootState) => state.loadings\n  );\n  const sourceLocales = selectedProjectConfig.supported_locales.filter(\n    ({ is_source }: any) => is_source\n  );\n  const targetLocales = selectedProjectConfig.supported_locales.filter(\n    ({ is_source }: any) => !is_source\n  );\n  const defaultData = {\n    workflow: '',\n    sourceLocale: '',\n    name: `Submission-${new Date().getTime()}`,\n    additionalInstruction: '',\n    dueDate: new Date(\n      new Date().getTime() + dueDateParam * 24 * 60 * 60 * 1000\n    ),\n    targetLocales: [],\n    additional: {},\n    config: {},\n  };\n  const [formValues, setFormValues] = useState<any>(defaultData);\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    if (!selectedContent || !selectedContent.length) {\n      dispatch(setError('Select Content to translate, please'));\n\n      return false;\n    }\n\n    if (!formValues.targetLocales || !formValues.targetLocales.length) {\n      dispatch(setError('Select Target locales to translate, please'));\n      return false;\n    }\n\n    return dispatch(\n      createSubmission({\n        ...formValues,\n        submitter:\n          formValues.submitter ||\n          (submitter\n            ? `${submitter.firstName} ${submitter.lastName}`\n            : 'Amplience'),\n        contentItems: selectedContent,\n      })\n    );\n  };\n\n  const handleChange = (e: any) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const handleSetSubmitter = (_e, newValue) => {\n    setSubmitter(newValue);\n    setFormValues({\n      ...formValues,\n      submitter: newValue\n        ? `${newValue.firstName} ${newValue.lastName}`\n        : 'Amplience',\n    });\n    localStorage.setItem('submission_submitter', JSON.stringify(newValue));\n  };\n  const handleSetTemplate = (event) => {\n    const template = templates.find(\n      ({ name }: any) => name === event.target.value\n    );\n\n    setTemplate(template);\n\n    if (template) {\n      return setFormValues({\n        ...formValues,\n        workflow: template.workflow,\n        sourceLocale: template.sourceLocale,\n        targetLocales: template.targetLocales,\n        additionalInstructions: template.additionalInstructions,\n        additional: template.customParameters || {},\n        config: template.customConfig || {},\n      });\n    }\n    return setFormValues({\n      ...formValues,\n      workflow: '',\n      sourceLocale: '',\n      targetLocales: [],\n      additionalInstructions: '',\n      additional: {},\n      config: {},\n    });\n  };\n  const handleSetAdditional = (e, key, keyVal = 'additional') => {\n    setFormValues({\n      ...formValues,\n      [keyVal]: {\n        ...formValues[keyVal],\n        [key]: e.target.value,\n      },\n    });\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      {create ? <Loader className=\"content-loader\" /> : null}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        className={classes.submitButton}\n      >\n        Create\n      </Button>\n      <div id=\"createForm\" className={classes.container}>\n        <Paper\n          elevation={1}\n          variant=\"outlined\"\n          square\n          classes={{ root: classes.paper }}\n        >\n          <Typography variant=\"h5\">New Submission Details</Typography>\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"Name\"\n              required\n              name=\"name\"\n              value={formValues.name}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <DatePicker\n              autoOk\n              variant=\"inline\"\n              format=\"dd/MM/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Due Date\"\n              name=\"dueDate\"\n              minDate={new Date()}\n              value={formValues.dueDate}\n              onChange={(date) => {\n                setFormValues({\n                  ...formValues,\n                  dueDate: date,\n                });\n              }}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              options={data}\n              getOptionLabel={(option: any) =>\n                option ? `${option.firstName} ${option.lastName}` : ''\n              }\n              id=\"submitter\"\n              value={submitter}\n              onChange={handleSetSubmitter}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Submitter\" margin=\"normal\" />\n              )}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"template-label\">Template</InputLabel>\n            <Select\n              labelId=\"template-label\"\n              label=\"Template\"\n              classes={{ outlined: classes.select }}\n              value={selectedTemplate ? selectedTemplate.name : ''}\n              onChange={handleSetTemplate}\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {templates.map(({ name }: any) => (\n                <MenuItem value={name} key={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"workflow-label\">Workflow</InputLabel>\n            <Select\n              labelId=\"workflow-label\"\n              label=\"Workflow\"\n              name=\"workflow\"\n              required\n              value={formValues.workflow}\n              onChange={handleChange}\n              classes={{ outlined: classes.select }}\n            >\n              {selectedProjectConfig &&\n                selectedProjectConfig.workflows &&\n                selectedProjectConfig.workflows.map((label: string) => (\n                  <MenuItem value={label} key={label}>\n                    {label}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"source-locale-label\">Source Locale</InputLabel>\n            <Select\n              labelId=\"source-locale-label\"\n              label=\"Source Locale\"\n              value={formValues.sourceLocale}\n              name=\"sourceLocale\"\n              required\n              onChange={handleChange}\n              classes={{ outlined: classes.select }}\n            >\n              {sourceLocales.map(({ locale_label, connector_locale }: any) => (\n                <MenuItem\n                  value={connector_locale}\n                  key={connector_locale}\n                >{`${locale_label} (${connector_locale})`}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <MultiSelectList\n              changeTargetLocales={(locales: string[]) =>\n                setFormValues({ ...formValues, targetLocales: locales })\n              }\n              locales={targetLocales}\n              selectedLocales={formValues.targetLocales}\n            />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <TextField\n              label=\"Additional Instructions\"\n              multiline\n              value={formValues.additionalInstructions}\n              rows={3}\n              name=\"additionalInstructions\"\n              onChange={handleChange}\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </FormControl>\n          <Divider className={classes.divider} />\n          <Typography variant=\"h5\">Custom Parameters</Typography>\n          {selectedProjectConfig.submission_options.attributes.map(\n            ({\n              key,\n              name,\n              type,\n              values,\n              enabled,\n              is_multiselect,\n              is_mandatory,\n            }: any) =>\n              enabled ? (\n                values && values.length ? (\n                  <FormControl key={key} className={classes.formControl}>\n                    <InputLabel id={`${name}-label`}>{name}</InputLabel>\n                    <Select\n                      labelId={`${name}-label`}\n                      label={name}\n                      defaultValue=\"\"\n                      multiple={is_multiselect}\n                      classes={{ outlined: classes.select }}\n                      required={is_mandatory}\n                      key={\n                        formValues.additional ? formValues.additional[key] : ''\n                      }\n                      value={\n                        formValues.additional ? formValues.additional[key] : ''\n                      }\n                      name={`additional.${key}`}\n                      onChange={(e) => handleSetAdditional(e, key)}\n                    >\n                      <MenuItem value=\"\">None</MenuItem>\n                      {values.map((label: string) => (\n                        <MenuItem value={label} key={label}>\n                          {label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                ) : type === 'string' ? (\n                  <FormControl className={classes.formControl}>\n                    <TextField\n                      label={name}\n                      required={is_mandatory}\n                      name={`additional.${key}`}\n                      key={name}\n                      value={\n                        formValues.additional ? formValues.additional[key] : ''\n                      }\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={(e) => handleSetAdditional(e, key)}\n                    />\n                  </FormControl>\n                ) : null\n              ) : null\n          )}\n\n          <Divider className={classes.divider} />\n          <Typography variant=\"h5\">Custom Configuration</Typography>\n          {selectedProjectConfig.submission_options.config.map(\n            ({\n              key,\n              name,\n              type,\n              values,\n              enabled,\n              is_multiselect,\n              is_mandatory,\n            }: any) =>\n              enabled ? (\n                values && values.length ? (\n                  <FormControl key={key} className={classes.formControl}>\n                    <InputLabel id={`${name}-label`}>{name}</InputLabel>\n                    <Select\n                      labelId={`${name}-label`}\n                      label={name}\n                      defaultValue=\"\"\n                      multiple={is_multiselect}\n                      classes={{ outlined: classes.select }}\n                      required={is_mandatory}\n                      key={formValues.config ? formValues.config[key] : ''}\n                      value={formValues.config ? formValues.config[key] : ''}\n                      name={`config.${key}`}\n                      onChange={(e) => handleSetAdditional(e, key, 'config')}\n                    >\n                      <MenuItem value=\"\">None</MenuItem>\n                      {values.map((label: string) => (\n                        <MenuItem value={label} key={label}>\n                          {label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                ) : type === 'string' ? (\n                  <FormControl className={classes.formControl}>\n                    <TextField\n                      label={name}\n                      required={is_mandatory}\n                      name={`config.${key}`}\n                      key={name}\n                      value={formValues.config ? formValues.config[key] : ''}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={(e) => handleSetAdditional(e, key, 'config')}\n                    />\n                  </FormControl>\n                ) : null\n              ) : null\n          )}\n        </Paper>\n        <Paper\n          elevation={1}\n          variant=\"outlined\"\n          square\n          classes={{ root: classes.paper }}\n        >\n          {formValues.sourceLocale ? (\n            <ContentItems\n              getSelectedIds={(content: string[]) =>\n                setSelectedContent(content)\n              }\n              locale={formValues.sourceLocale}\n            />\n          ) : null}\n        </Paper>\n      </div>\n    </form>\n  );\n};\n\nexport default SubmissionCreateForm;\n","import React, { useEffect } from 'react';\nimport { MenuItem, Menu, Icon, makeStyles } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PopupState, {\n  bindTrigger,\n  bindMenu,\n  InjectedProps,\n} from 'material-ui-popup-state';\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\nimport { RootState } from '../store/store';\nimport Table from './common/Table';\nimport Loader from './common/Loader';\nimport {\n  getTasks,\n  downloadTask,\n  cancelTask,\n} from '../store/tasks/tasks.actions';\nimport {\n  TasksInterface,\n  LoadingsInterface,\n  SDKInterface,\n  TaskInterface,\n} from '../types/types';\n\nexport const useStyles = makeStyles(() => ({\n  status: {\n    marginRight: '15px',\n    verticalAlign: 'middle',\n  },\n  icon: {\n    verticalAlign: 'middle',\n    cursor: 'pointer',\n    color: '#f44336',\n  },\n  menuIcon: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    cursor: 'pointer',\n  },\n}));\n\nconst TASK_STATUSES: { [key: string]: string } = {\n  Translate: 'Translating',\n  Completed: 'Completed',\n  Delivered: 'Translation Complete',\n};\n\nconst Tasks = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { data, pagination }: TasksInterface = useSelector(\n    (state: RootState) => state.tasks\n  );\n  const { content, loadingIds }: LoadingsInterface = useSelector(\n    (state: RootState) => state.loadings\n  );\n\n  const { SDK }: SDKInterface = useSelector((state: RootState) => state.sdk);\n\n  const columns = [\n    {\n      id: 'name',\n      label: 'Name',\n    },\n    {\n      id: 'source_locale',\n      label: 'Source Language',\n      format: (sourceLocale: { locale_display_name: string; locale: string }) =>\n        `${sourceLocale.locale_display_name} (${sourceLocale.locale})`,\n    },\n    {\n      id: 'target_locale',\n      label: 'Target Language',\n      format: (targetLocale: { locale_display_name: string; locale: string }) =>\n        `${targetLocale.locale_display_name} (${targetLocale.locale})`,\n    },\n    {\n      id: 'due_date',\n      label: 'Due Date',\n      format: (timestamp: number) =>\n        new Date(timestamp).toLocaleDateString().replaceAll('.', '/'),\n    },\n    {\n      id: '_status',\n      label: 'Status',\n      format: (row: TaskInterface) => (\n        <div title={row.error_message}>\n          <span className={classes.status}>\n            {TASK_STATUSES[row.status] || row.status}\n          </span>\n          {row.is_error ? <ErrorOutline className={classes.icon} /> : null}\n        </div>\n      ),\n    },\n    {\n      id: 'menu',\n      label: ' ',\n      format: (row: TaskInterface) =>\n        loadingIds[row.task_id] ? (\n          <Loader className=\"tableLoader\" />\n        ) : (\n          <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState: InjectedProps) => (\n              <>\n                <Icon\n                  component=\"a\"\n                  className={classes.menuIcon}\n                  {...bindTrigger(popupState)}\n                >\n                  ...\n                </Icon>\n                <Menu {...bindMenu(popupState)}>\n                  {row.status === 'Completed' ? (\n                    <MenuItem\n                      onClick={() => {\n                        dispatch(downloadTask(row));\n                        popupState.close();\n                      }}\n                    >\n                      Apply Translation\n                    </MenuItem>\n                  ) : null}\n                  {row.metadata && row.metadata.localizedId ? (\n                    <MenuItem\n                      onClick={() => {\n                        // @ts-ignore\n                        if (SDK && SDK.applicationNavigator && SDK.options) {\n                          const href = SDK.applicationNavigator.openContentItem(\n                            { id: row.metadata.localizedId },\n                            { returnHref: true }\n                          );\n                          // @ts-ignore\n                          SDK.options.window.open(href, '_blank');\n                        }\n                        popupState.close();\n                      }}\n                    >\n                      View Translated\n                    </MenuItem>\n                  ) : null}\n                  <MenuItem\n                    onClick={() => {\n                      // @ts-ignore\n                      if (SDK && SDK.applicationNavigator && SDK.options) {\n                        const href = SDK.applicationNavigator.openContentItem(\n                          { id: row.unique_identifier },\n                          { returnHref: true }\n                        );\n                        // @ts-ignore\n                        SDK.options.window.open(href, '_blank');\n                      }\n                      popupState.close();\n                    }}\n                  >\n                    View Source\n                  </MenuItem>\n                  {row.status !== 'Delivered' &&\n                  row.status !== 'Cancelled' &&\n                  row.state.state_name !== 'Cancelled' &&\n                  row.status !== 'Completed' ? (\n                    <MenuItem\n                      onClick={() => {\n                        dispatch(cancelTask(row));\n                        popupState.close();\n                      }}\n                    >\n                      Cancel\n                    </MenuItem>\n                  ) : null}\n                </Menu>\n              </>\n            )}\n          </PopupState>\n        ),\n    },\n  ];\n\n  useEffect(() => {\n    if (pagination && !pagination.page) {\n      dispatch(getTasks());\n    }\n  }, [pagination, dispatch]);\n\n  return (\n    <>\n      {content ? <Loader className=\"content-loader\" /> : null}\n      <Table columns={columns} data={data} currentPage={pagination.page} />\n    </>\n  );\n};\n\nexport default Tasks;\n","import React, { useRef, useState } from 'react';\nimport {\n  Popover,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Divider,\n  Checkbox,\n  FormGroup,\n  TextField,\n} from '@material-ui/core';\nimport PopupState, {\n  bindTrigger,\n  bindPopover,\n  bindToggle,\n} from 'material-ui-popup-state';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  getSubmissions,\n  setFilter as setFilterValue,\n} from '../store/submissions/submissions.actions';\nimport {\n  Option,\n  SubmissionFilterInt,\n  SubmissionsFilterBarInterface,\n} from '../types/types';\nimport { FilterStatus, useStyles } from './FilterBar';\nimport FilterIcon from '../styles/FilterIcon.svg';\nimport { SUBMISSION_STATUSES } from './Submissions';\n\nconst options = [\n  {\n    label: 'Error',\n    value: 1,\n    key: 'is_error',\n  },\n  {\n    label: 'Overdue',\n    value: 1,\n    key: 'is_overdue',\n  },\n];\n\nconst SubmissionFilterBar = ({\n  filterOptions,\n  filter: appliedFilter,\n}: SubmissionsFilterBarInterface) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const filterRef = useRef(null);\n  const [filter, setFilter] = useState<any>(appliedFilter);\n\n  const applyFilter = (filterItem: SubmissionFilterInt, popupState: any) => {\n    dispatch(setFilterValue(filterItem));\n    dispatch(getSubmissions(1, filterItem));\n    popupState.close();\n  };\n\n  const onRemoveFilterValue = (key: 'state', id: string) => {\n    const currentList: string[] = filter[key] || [];\n\n    if (currentList.includes(id)) {\n      currentList.splice(currentList.indexOf(id), 1);\n\n      setFilter({\n        ...filter,\n        [key]: currentList,\n      });\n\n      dispatch(\n        getSubmissions(1, {\n          ...filter,\n          [key]: currentList,\n        })\n      );\n    }\n  };\n\n  const onRemoveTextFilter = (key: string, value: string | number = '') => {\n    setFilter({\n      ...filter,\n      [key]: value,\n    });\n    dispatch(\n      setFilterValue({\n        ...filter,\n        [key]: value,\n      })\n    );\n\n    dispatch(\n      getSubmissions(1, {\n        ...filter,\n        [key]: value,\n      })\n    );\n  };\n\n  const FilterBlock = ({\n    name,\n    keyName,\n    options,\n    handleChange,\n  }: {\n    name: string;\n    keyName: string;\n    options: Option[];\n    handleChange: Function;\n  }) => (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">{name}</FormLabel>\n      <FormGroup aria-label={name}>\n        {options.map(({ label, value, key = keyName }: Option, index) => (\n          <FormControlLabel\n            key={index}\n            value={value}\n            control={\n              <Checkbox\n                checked={\n                  filter[key] && Array.isArray(filter[key])\n                    ? filter[key].includes(value)\n                    : Boolean(filter[key])\n                }\n                className={classes.radio}\n                onChange={() => handleChange(key, value || '')}\n                color=\"primary\"\n              />\n            }\n            label={`${label}`}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n  );\n\n  const handleOptionChange = (key) =>\n    setFilter({\n      ...filter,\n      [key]: filter[key] ? 0 : 1,\n    });\n\n  const handleChange = (key: 'state', id: any) => {\n    const currentList: string[] = filter[key] || [];\n\n    if (currentList.includes(id)) {\n      currentList.splice(currentList.indexOf(id), 1);\n\n      return setFilter({\n        ...filter,\n        [key]: currentList,\n      });\n    }\n\n    return setFilter({\n      ...filter,\n      [key]: [...currentList, id],\n    });\n  };\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div className={classes.filterBar}>\n          <div className={classes.filterStatus}>\n            <div>\n              <h3 className={classes.filterName}>Status</h3>\n              <div className={classes.filterValue}>\n                {appliedFilter.state.length ? (\n                  appliedFilter.state.map((state) => (\n                    <FilterStatus\n                      key={state}\n                      popupState={popupState}\n                      label={SUBMISSION_STATUSES[state] || state}\n                      value={state}\n                      onClear={() => onRemoveFilterValue('state', state)}\n                    />\n                  ))\n                ) : (\n                  <a {...bindTrigger(popupState)}>All</a>\n                )}\n              </div>\n            </div>\n            {appliedFilter.submission_name ? (\n              <div>\n                <h3 className={classes.filterName}>Submission Name</h3>\n                <div className={classes.filterValue}>\n                  <FilterStatus\n                    popupState={popupState}\n                    label={\n                      SUBMISSION_STATUSES[appliedFilter.submission_name] ||\n                      appliedFilter.submission_name\n                    }\n                    value={appliedFilter.submission_name}\n                    onClear={() => onRemoveTextFilter('submission_name')}\n                  />\n                </div>\n              </div>\n            ) : null}\n            <div>\n              <h3 className={classes.filterName}>Submitter</h3>\n              <div className={classes.filterValue}>\n                {appliedFilter.submitter ? (\n                  <FilterStatus\n                    popupState={popupState}\n                    label={appliedFilter.submitter}\n                    value={appliedFilter.submitter}\n                    onClear={() => onRemoveTextFilter('submitter')}\n                  />\n                ) : (\n                  <a {...bindTrigger(popupState)}>All</a>\n                )}\n              </div>\n            </div>\n            {appliedFilter.is_error || appliedFilter.is_overdue ? (\n              <div>\n                <h3 className={classes.filterName}>Options</h3>\n                <div className={classes.filterValue}>\n                  {appliedFilter.is_error ? (\n                    <FilterStatus\n                      popupState={popupState}\n                      label=\"Error\"\n                      value={appliedFilter.is_error}\n                      onClear={() => onRemoveTextFilter('is_error', 0)}\n                    />\n                  ) : null}\n                  {appliedFilter.is_overdue ? (\n                    <FilterStatus\n                      popupState={popupState}\n                      label=\"Overdue\"\n                      value={appliedFilter.is_overdue}\n                      onClear={() => onRemoveTextFilter('is_overdue', 0)}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          <IconButton\n            ref={filterRef}\n            className={classes.filterBtn}\n            aria-label=\"toggle\"\n            size=\"small\"\n            {...bindTrigger(popupState)}\n          >\n            <img alt=\"filterIcon\" src={FilterIcon} />\n          </IconButton>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorReference=\"anchorEl\"\n            anchorEl={filterRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            onClose={() => {\n              setFilter(appliedFilter);\n              popupState.close();\n            }}\n          >\n            <div className={classes.popover}>\n              <div className={classes.filterHeading}>\n                <TextField\n                  placeholder=\"Submission name\"\n                  name=\"label\"\n                  style={{\n                    minWidth: 250,\n                  }}\n                  value={filter.submission_name}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setFilter({\n                      ...filter,\n                      submission_name: e.target.value,\n                    })\n                  }\n                />\n                <div>\n                  <Button variant=\"text\" {...bindToggle(popupState)}>\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => applyFilter(filter, popupState)}\n                  >\n                    Apply\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.filterOptions}>\n                <FilterBlock\n                  name=\"Status\"\n                  keyName=\"state\"\n                  options={filterOptions.state}\n                  handleChange={handleChange}\n                />\n                <Divider flexItem orientation=\"vertical\" />\n                <FilterBlock\n                  name=\"Options\"\n                  keyName=\"\"\n                  options={options}\n                  handleChange={handleOptionChange}\n                />\n                <Divider flexItem orientation=\"vertical\" />\n                <Autocomplete\n                  options={filterOptions.submitters}\n                  getOptionLabel={(option: any) => (option ? option.label : '')}\n                  id=\"submitter\"\n                  fullWidth\n                  freeSolo\n                  style={{\n                    minWidth: 250,\n                  }}\n                  onChange={(_event, newValue) => {\n                    if (\n                      typeof newValue !== 'string' &&\n                      newValue &&\n                      newValue.value\n                    ) {\n                      setFilter({\n                        ...filter,\n                        submitter: newValue.value || '',\n                      });\n                    }\n                  }}\n                  onInputChange={(_event, newValue) =>\n                    setFilter({\n                      ...filter,\n                      submitter: newValue,\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Submitter\" margin=\"normal\" />\n                  )}\n                />\n              </div>\n            </div>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n};\n\nexport default SubmissionFilterBar;\n","import React, { useEffect } from 'react';\nimport { MenuItem, Menu, Icon, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PopupState, {\n  bindTrigger,\n  bindMenu,\n  InjectedProps,\n} from 'material-ui-popup-state';\nimport { withRouter } from 'react-router';\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\nimport {\n  LoadingsInterface,\n  RootStateInt,\n  SubmissionInt,\n  SubmissionsInterface,\n  UserInterface,\n} from '../types/types';\nimport Table from './common/Table';\nimport Loader from './common/Loader';\nimport {\n  getSubmissions,\n  setSelectedSubmission,\n  cancelSubmission,\n} from '../store/submissions/submissions.actions';\nimport { applyAllTranslations } from '../store/tasks/tasks.actions';\nimport SubmissionFilterBar from './SubmissionFilterBar';\nimport { useStyles } from './Tasks';\n\nexport const SUBMISSION_STATUSES: { [key: string]: string } = {\n  Delivered: 'Translation Complete',\n  Completed: 'Translation Ready',\n  Translate: 'Translating',\n};\n\nconst Submissions = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { history } = props;\n  const { data, pagination, filter }: SubmissionsInterface = useSelector(\n    (state: RootStateInt) => state.submissions\n  );\n  const { content, loadingIds }: LoadingsInterface = useSelector(\n    (state: RootStateInt) => state.loadings\n  );\n  const { data: users }: { data: UserInterface[] } = useSelector(\n    (state: RootStateInt) => state.users\n  );\n\n  const columns = [\n    {\n      id: 'submission_name',\n      label: 'Submission name',\n    },\n    {\n      id: 'submitter',\n      label: 'Submitter',\n    },\n    {\n      id: 'source_locale',\n      label: 'Source language',\n      format: (sourceLocale: { locale_display_name: string; locale: string }) =>\n        `${sourceLocale.locale_display_name} (${sourceLocale.locale})`,\n    },\n    {\n      id: 'language_jobs',\n      label: 'Target language',\n      format: (\n        languageJobs: {\n          target_locale: { locale_display_name: string; locale: string };\n        }[]\n      ) =>\n        languageJobs\n          .map(\n            (job) =>\n              `${job.target_locale.locale_display_name} (${job.target_locale.locale})`\n          )\n          .join(', '),\n    },\n    {\n      id: 'due_date',\n      label: 'Due Date',\n      format: (timestamp: number) =>\n        new Date(timestamp).toLocaleDateString().replaceAll('.', '/'),\n    },\n    {\n      id: '_state',\n      label: 'Status',\n      format: (row: SubmissionInt) => (\n        <div>\n          <span className={classes.status}>\n            {row.state\n              ? SUBMISSION_STATUSES[row.state.state_name] ||\n                row.state.state_name\n              : ''}\n          </span>\n          {row.is_error ? <ErrorOutline className={classes.icon} /> : null}\n        </div>\n      ),\n    },\n    {\n      id: 'menu',\n      label: ' ',\n      format: (row: SubmissionInt) =>\n        loadingIds[row.submission_id || ''] ? (\n          <Loader className=\"tableLoader\" />\n        ) : (\n          <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState: InjectedProps) => (\n              <>\n                <Icon\n                  component=\"a\"\n                  className=\"menu-icon\"\n                  {...bindTrigger(popupState)}\n                >\n                  ...\n                </Icon>\n                <Menu {...bindMenu(popupState)}>\n                  <MenuItem\n                    onClick={() => {\n                      dispatch(setSelectedSubmission(row));\n                      popupState.close();\n                    }}\n                  >\n                    View Tasks\n                  </MenuItem>\n                  {row && row.state && row.state.state_name === 'Completed' ? (\n                    <MenuItem\n                      onClick={() => {\n                        dispatch(applyAllTranslations(row));\n                        popupState.close();\n                      }}\n                    >\n                      Apply all translations\n                    </MenuItem>\n                  ) : null}\n                  {row &&\n                  row.state &&\n                  row.state.state_name !== 'Delivered' &&\n                  row.state.state_name !== 'Cancelled' &&\n                  row.state.state_name !== 'Completed' ? (\n                    <MenuItem\n                      onClick={() => {\n                        dispatch(cancelSubmission(row));\n                        popupState.close();\n                      }}\n                    >\n                      Cancel\n                    </MenuItem>\n                  ) : null}\n                </Menu>\n              </>\n            )}\n          </PopupState>\n        ),\n    },\n  ];\n\n  useEffect(() => {\n    if (pagination && !pagination.page) {\n      dispatch(getSubmissions(1, filter));\n    }\n  }, [pagination, dispatch, filter]);\n\n  return (\n    <>\n      {content ? <Loader className=\"content-loader\" /> : null}\n      <Paper\n        elevation={1}\n        variant=\"outlined\"\n        square\n        style={{\n          padding: '0 20px',\n        }}\n      >\n        <SubmissionFilterBar\n          filterOptions={{\n            state: [\n              {\n                label: 'Translation Complete',\n                value: 'Delivered',\n              },\n              {\n                label: 'Translation Ready',\n                value: 'Completed',\n              },\n              {\n                label: 'Translating',\n                value: 'Translate',\n              },\n              {\n                label: 'Pre-process',\n                value: 'Pre-process',\n              },\n              {\n                label: 'Cancelled',\n                value: 'Cancelled',\n              },\n            ],\n            submitters: users.map(({ firstName, lastName }: any) => ({\n              label: `${firstName} ${lastName}`,\n              value: `${firstName} ${lastName}`,\n            })),\n          }}\n          filter={filter}\n        />\n      </Paper>\n\n      <Table\n        columns={columns}\n        data={data}\n        currentPage={pagination.page}\n        rowClick={(row: any) => {\n          dispatch(setSelectedSubmission(row));\n          history.push('/tasks');\n        }}\n      />\n    </>\n  );\n};\n\nexport default withRouter(Submissions);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Router } from 'react-router';\nimport { history } from './App';\nimport AppBar from './components/AppBar';\nimport Loader from './components/common/Loader';\nimport SubmissionCreateForm from './components/SubmissionCreateForm';\nimport Tasks from './components/Tasks';\nimport Submissions from './components/Submissions';\nimport { RootState } from './store/store';\nimport { LoadingsInterface, SDKInterface } from './types/types';\n\nconst RouterComponent = () => {\n  const {\n    connected,\n    loadings,\n  }: {\n    loadings: LoadingsInterface;\n    connected: boolean;\n  } = useSelector((state: RootState) => ({\n    connected: (state.sdk as SDKInterface).connected,\n    loadings: state.loadings,\n  }));\n\n  return connected ? (\n    <Router history={history}>\n      <AppBar />\n\n      {loadings.table ? (\n        <Loader />\n      ) : (\n        <Switch>\n          <Route exact path=\"/create\">\n            <SubmissionCreateForm />\n          </Route>\n          <Route exact path=\"/tasks\">\n            <Tasks />\n          </Route>\n          <Route path=\"/\">\n            <Submissions />\n          </Route>\n        </Switch>\n      )}\n    </Router>\n  ) : (\n    <Loader className=\"content-loader\" />\n  );\n};\n\nexport default RouterComponent;\n","import { createBrowserHistory } from 'history';\nimport { Snackbar } from '@material-ui/core';\nimport { Warning } from '@material-ui/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport { RootState } from './store/store';\nimport { setError } from './store/error/error.actions';\nimport RouterComponent from './Router';\n\nlet location = window.location.pathname;\nconst lastSlash = location.lastIndexOf('/');\nif (lastSlash !== location.length - 1) {\n  location = location.substring(0, lastSlash + 1);\n}\n\nexport const history = createBrowserHistory({ basename: location });\n\nconst useStyles = makeStyles(() => ({\n  svg: {\n    verticalAlign: 'middle',\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#1ab0f9',\n      main: '#039be5',\n      dark: '#1ab0f9',\n      contrastText: '#fff',\n    },\n  },\n});\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { error } = useSelector((state: RootState) => ({\n    error: state.error,\n  }));\n\n  const message = (\n    <span>\n      <Warning className={classes.svg} />\n      {error}\n    </span>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        autoHideDuration={8000}\n        open={Boolean(error)}\n        onClose={() => dispatch(setError(''))}\n        message={message}\n      />\n\n      <RouterComponent />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Dispatch } from 'redux';\nimport jsonpath from 'jsonpath';\nimport {\n  ContentType,\n  WorkflowState,\n  ContentGraph,\n  ContentLink,\n  ContentItem,\n} from 'dc-management-sdk-js';\nimport { setError } from '../error/error.actions';\nimport { AppDispatch, RootState } from '../store';\nimport { history } from '../../App';\nimport {\n  setTasks,\n  setPagination as setTasksPagination,\n} from '../tasks/tasks.actions';\nimport {\n  setContentLoader,\n  setCreateLoader,\n} from '../loadings/loadings.actions';\nimport {\n  Pagination,\n  RootStateInt,\n  SubmissionFilterInt,\n  SubmissionInt,\n  FilterObject,\n} from '../../types/types';\n\nexport const SET_SUBMISSIONS = 'SET_SUBMISSIONS';\nexport const SET_SELECTED_SUBMISSION = 'SET_SELECTED_SUBMISSION';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const CHANGE_SUB_PAGE = 'CHANGE_SUB_PAGE';\nexport const SET_SUB_FILTER = 'SET_SUB_FILTER';\n\nexport const setSubmissions = (value: SubmissionInt[]) => ({\n  type: SET_SUBMISSIONS,\n  value,\n});\n\nexport const setFilter = (value: SubmissionFilterInt) => ({\n  type: SET_SUB_FILTER,\n  value,\n});\n\nexport const setSelectedSubmission =\n  (value?: SubmissionInt) => (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: SET_SELECTED_SUBMISSION,\n        value,\n      });\n\n      dispatch(setTasks([]));\n      dispatch(\n        setTasksPagination({\n          page: 0,\n          totalCount: 0,\n        })\n      );\n\n      history.push('/tasks');\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n    }\n  };\n\nexport const setPagination = (value: Pagination) => ({\n  type: SET_PAGINATION,\n  value,\n});\n\nexport const getSubmissions =\n  (page?: number, filter?: SubmissionFilterInt) =>\n  async (dispatch: Dispatch, getState: () => RootState) => {\n    try {\n      let filterObject: FilterObject = {\n        state: [],\n        submitter: '',\n        search_string: '',\n        submission_name: '',\n        is_error: 0,\n        is_overdue: 0,\n        is_redelivery: 0,\n      };\n      const {\n        Api,\n        sdk: {\n          params: { globalFilter },\n        },\n        submissions: {\n          filter: storedFilter,\n          pagination: { page: currentPage },\n        },\n      }: RootStateInt = getState();\n\n      dispatch(setContentLoader(true));\n\n      if (filter || storedFilter) {\n        const currentFilter: any = filter || storedFilter;\n        filterObject = Object.keys(currentFilter).reduce(\n          (acc: { [key: string]: any }, key: string) => {\n            if (key !== 'state' && currentFilter[key]) {\n              acc[key] = currentFilter[key];\n            } else if (\n              key === 'state' &&\n              currentFilter[key] &&\n              currentFilter[key].length\n            ) {\n              acc[key] = currentFilter[key];\n            }\n\n            return acc;\n          },\n          {}\n        ) as FilterObject;\n      }\n\n      if (globalFilter) {\n        filterObject.tags = [globalFilter];\n      }\n\n      const { current_page_number, total_result_pages_count, submission_list } =\n        await Api.getSubmissions(page || currentPage || 0, filterObject);\n\n      dispatch(setSubmissions(submission_list));\n      dispatch(\n        setPagination({\n          page: current_page_number,\n          totalCount: total_result_pages_count,\n        })\n      );\n      dispatch(setContentLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      dispatch(setContentLoader(false));\n    }\n  };\n\nexport const cancelSubmission =\n  ({ submission_id }: SubmissionInt) =>\n  async (dispatch: Dispatch, getState: () => RootState) => {\n    try {\n      const { Api, projects }: RootStateInt = getState();\n\n      dispatch(setContentLoader(true));\n\n      if (submission_id) {\n        await Api.cancelSubmission(submission_id, projects.selectedProject);\n      }\n\n      dispatch(setContentLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      dispatch(setContentLoader(false));\n    }\n  };\n\nexport const createSubmission =\n  ({\n    submitter,\n    contentItems,\n    name,\n    workflow,\n    dueDate,\n    additionalInstructions,\n    sourceLocale,\n    targetLocales,\n    additional,\n    config,\n  }: {\n    submitter: string;\n    contentItems: string[];\n    name: string;\n    workflow: string;\n    dueDate: number;\n    additionalInstructions: string;\n    sourceLocale: string;\n    targetLocales: string;\n    additional: { [key: string]: any };\n    config: { [key: string]: any };\n  }) =>\n  async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      const {\n        Api,\n        projects: { selectedProject },\n        contentTypes: { data: hubContentTypes },\n        sdk: { params, dcManagement },\n      }: RootStateInt = getState();\n      if (!dcManagement) {\n        return dispatch(setError('No DC Management SDK found'));\n      }\n      const project = params.projects.find(\n        (el: any) => el.id === selectedProject\n      );\n\n      dispatch(setCreateLoader(true));\n      const idMappingTable: { [key: string]: any } = {};\n      const tasks: string[] = [];\n\n      for (let i = contentItems.length - 1; i >= 0; i--) {\n        const contentItemId = contentItems[i];\n        idMappingTable[contentItemId] = {\n          nested: {},\n        };\n        await ContentGraph.deepCopy(\n          [contentItemId],\n          dcManagement.contentItems.get,\n          async (contentItem) => {\n            const contentType =\n              contentItem &&\n              project &&\n              project.contentTypes.find(\n                ({ uri }: { uri: string }) =>\n                  uri === contentItem.body._meta.schema\n              );\n\n            if (contentItemId === contentItem.id) {\n              const ct =\n                hubContentTypes &&\n                hubContentTypes.find(\n                  ({ contentTypeUri }: ContentType) =>\n                    contentType &&\n                    contentTypeUri &&\n                    contentType.uri &&\n                    contentTypeUri.toLowerCase() ===\n                      contentType.uri.toLowerCase()\n                );\n              const defaultVizObject =\n                ct && ct.settings && ct.settings.visualizations\n                  ? ct.settings.visualizations.find((viz) => viz.default)\n                  : { templatedUri: '' };\n\n              const defaultViz =\n                defaultVizObject && defaultVizObject.templatedUri\n                  ? defaultVizObject.templatedUri\n                      .replace(/{{vse.domain}}/g, params.vse)\n                      .replace(/{{content.sys.id}}/g, contentItem.id)\n                  : '';\n              idMappingTable[contentItemId].label = contentItem.label;\n              idMappingTable[contentItemId].contextUrl = defaultViz || '';\n            }\n\n            if (contentType && contentType.translatableFields) {\n              const fileJson = contentType.translatableFields.reduce(\n                (acc: any, field: string) => {\n                  const nodes = jsonpath.nodes(contentItem.body, `$.${field}`);\n\n                  nodes.forEach(({ path, value }) => {\n                    if (value && !ContentLink.isContentLink(value)) {\n                      acc.push({\n                        key: path.join('.').replace('$.', ''),\n                        value,\n                      });\n                    }\n                  });\n\n                  return acc;\n                },\n                []\n              );\n\n              if (contentItemId === contentItem.id) {\n                idMappingTable[contentItemId].translations = fileJson;\n              } else if (sourceLocale === contentItem.locale) {\n                idMappingTable[contentItemId].nested[contentItem.id] = fileJson;\n              }\n            }\n\n            return contentItem;\n          }\n        );\n\n        const objJsonStr = JSON.stringify(idMappingTable[contentItemId]);\n\n        const { content_id } = await Api.createNodeFile({\n          file: new Blob([objJsonStr], {\n            type: 'application/json',\n          }),\n          unique_identifier: contentItemId,\n          public_preview_url: idMappingTable[contentItemId].contextUrl,\n          name: idMappingTable[contentItemId].label,\n          submitter,\n          source_locale: sourceLocale,\n          file_type: params.fileType || 'json',\n          connector_key: selectedProject || '',\n        });\n\n        tasks.push(content_id);\n      }\n\n      const submissionData: SubmissionInt = {\n        submission_name: name,\n        due_date: dueDate && new Date(dueDate).getTime(),\n        instructions: additionalInstructions || '',\n        source_locale: sourceLocale,\n        target_locale: targetLocales,\n        content_list: tasks,\n        content_list_locale: tasks.map((id: any) => ({\n          content_id: id,\n          target_locale: targetLocales,\n        })),\n        submitter: submitter,\n        workflow: workflow,\n        connector_key: selectedProject || '',\n      };\n\n      if (params.globalFilter) {\n        submissionData.tags = [params.globalFilter];\n      }\n\n      if (Object.keys(additional).length) {\n        submissionData.attributes = additional;\n      }\n\n      if (Object.keys(config).length) {\n        submissionData.config = config;\n      }\n\n      await Api.createSubmission(submissionData);\n\n      await Promise.all(\n        contentItems.map(async (id: string) => {\n          const contentItem: ContentItem = await dcManagement.contentItems.get(\n            id\n          );\n\n          if (params.statuses && params.statuses.inProgress) {\n            await contentItem.related.assignWorkflowState(\n              new WorkflowState({ id: params.statuses.inProgress })\n            );\n          }\n\n          return contentItem;\n        })\n      );\n\n      dispatch(getSubmissions(0));\n\n      history.push('/');\n      return dispatch(setCreateLoader(false));\n    } catch (e: any) {\n      dispatch(setError(e.toString()));\n      return dispatch(setCreateLoader(false));\n    }\n  };\n","import { AnyAction } from 'redux';\nimport {\n  SET_SUBMISSIONS,\n  SET_PAGINATION,\n  CHANGE_SUB_PAGE,\n  SET_SELECTED_SUBMISSION,\n  SET_SUB_FILTER,\n} from './submissions.actions';\nimport { SubmissionsInterface } from '../../types/types';\n\nconst defaultState = {\n  data: [],\n  filter: {\n    state: [],\n    submitter: '',\n    search_string: '',\n    submission_name: '',\n    is_error: 0,\n    is_overdue: 0,\n    is_redelivery: 0,\n  },\n  selectedSubmission: {},\n  pagination: { page: 0, totalCount: 0 },\n};\n\nexport function submissionsReducer(\n  state = defaultState,\n  action: AnyAction\n): SubmissionsInterface {\n  switch (action.type) {\n    case SET_SUBMISSIONS:\n      return {\n        ...state,\n        data: [...action.value],\n      };\n    case SET_SELECTED_SUBMISSION:\n      return {\n        ...state,\n        selectedSubmission: action.value,\n      };\n    case SET_PAGINATION:\n      return {\n        ...state,\n        pagination: { ...action.value },\n      };\n    case CHANGE_SUB_PAGE:\n      return {\n        ...state,\n        pagination: {\n          ...state.pagination,\n          page: action.value,\n        },\n      };\n    case SET_SUB_FILTER:\n      return {\n        ...state,\n        filter: { ...action.value },\n      };\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\nimport { SET_TASKS, SET_TASKS_PAGINATION } from './tasks.actions';\nimport { Pagination, TaskInterface, TasksInterface } from '../../types/types';\n\nconst defaultState = {\n  data: [],\n  pagination: { page: 0, totalCount: 0 },\n};\n\nexport function tasksReducer(\n  state = defaultState,\n  action: AnyAction\n): TasksInterface {\n  switch (action.type) {\n    case SET_TASKS:\n      return {\n        ...state,\n        data: [...(action.value as TaskInterface[])],\n      };\n    case SET_TASKS_PAGINATION:\n      return {\n        ...state,\n        pagination: { ...(action.value as Pagination) },\n      };\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\nimport {\n  SET_CONTENT,\n  SET_TABLE,\n  SET_CREATE,\n  SET_LOADING_BY_ID,\n} from './loadings.actions';\nimport { LoadingsInterface } from '../../types/types';\n\nconst defaultState = {\n  content: false,\n  table: false,\n  create: false,\n  loadingIds: {},\n};\n\nexport function loadingsReducer(\n  state = defaultState,\n  action: AnyAction\n): LoadingsInterface {\n  switch (action.type) {\n    case SET_CONTENT:\n      return {\n        ...state,\n        content: Boolean(action.value),\n      };\n    case SET_TABLE:\n      return {\n        ...state,\n        table: Boolean(action.value),\n      };\n    case SET_CREATE:\n      return {\n        ...state,\n        create: Boolean(action.value),\n      };\n    case SET_LOADING_BY_ID:\n      return {\n        ...state,\n        loadingIds: {\n          ...state.loadingIds,\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          [action.id || '']: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\n\nimport {\n  SET_CONTENT_ITEMS,\n  SET_CONTENT_ITEMS_PAGINATION,\n  SET_FACETS,\n  SET_FILTER,\n} from './contentItems.actions';\n\nimport { ContentItemsInterface } from '../../types/types';\n\nconst defaultState = {\n  data: [],\n  facets: {\n    repositories: [],\n    contentTypes: [],\n    assignees: [],\n  },\n  filter: {\n    contentTypes: [],\n    assignees: [],\n    repositories: '',\n    text: '',\n  },\n  pagination: { page: 0, totalCount: 0 },\n};\n\nexport function contentItemsReducer(\n  state = defaultState,\n  action: AnyAction\n): ContentItemsInterface {\n  switch (action.type) {\n    case SET_CONTENT_ITEMS:\n      return {\n        ...state,\n        data: [...action.value],\n      };\n    case SET_CONTENT_ITEMS_PAGINATION:\n      return {\n        ...state,\n        pagination: { ...action.value },\n      };\n    case SET_FACETS:\n      return {\n        ...state,\n        facets: { ...action.value },\n      };\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: { ...action.value },\n      };\n    default:\n      return state;\n  }\n}\n","import thunkMiddleware, { ThunkMiddleware } from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { StateType } from 'typesafe-actions';\nimport { errorReducer } from './error/error.reducer';\nimport { sdkReducer } from './sdk/sdk.reducer';\nimport { projectReducer } from './project/project.reducer';\nimport { submissionsReducer } from './submissions/submissions.reducer';\nimport { tasksReducer } from './tasks/tasks.reducer';\nimport { apiReducer } from './api/api.reducer';\nimport { loadingsReducer } from './loadings/loadings.reducer';\nimport { contentItemsReducer } from './contentItems/contentItems.reducer';\nimport { usersReducer } from './users/users.reducer';\nimport { contentTypesReducer } from './contentTypes/contentTypes.reducer';\n\nexport const rootReducer = combineReducers({\n  sdk: sdkReducer,\n  error: errorReducer,\n  projects: projectReducer,\n  submissions: submissionsReducer,\n  tasks: tasksReducer,\n  loadings: loadingsReducer,\n  users: usersReducer,\n  Api: apiReducer,\n  contentItems: contentItemsReducer,\n  contentTypes: contentTypesReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunkMiddleware as ThunkMiddleware, logger))\n);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = StateType<typeof rootReducer>;\n","import { AnyAction } from 'redux';\nimport { SET_ERROR } from './error.actions';\n\nexport function errorReducer(state = '', action: AnyAction): string {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.value as string;\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\nimport { SET_USERS } from './users.actions';\nimport { UserInterface } from '../../types/types';\n\nexport function usersReducer(\n  state = {\n    data: [],\n  },\n  action: AnyAction\n): { data: UserInterface[] } {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        data: action.value as UserInterface[],\n      };\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\nimport { SET_API } from './api.actions';\n\nexport function apiReducer(\n  state = {\n    apiKey: '',\n  },\n  action: AnyAction\n): any {\n  switch (action.type) {\n    case SET_API:\n      return action.value;\n    default:\n      return state;\n  }\n}\n","import { AnyAction } from 'redux';\nimport { ContentType } from 'dc-management-sdk-js';\nimport { SET_CONTENT_TYPES } from './contentTypes.actions';\n\nexport function contentTypesReducer(\n  state = {\n    data: [],\n  },\n  action: AnyAction\n): {\n  data: ContentType[];\n} {\n  switch (action.type) {\n    case SET_CONTENT_TYPES:\n      return {\n        ...state,\n        data: action.value as ContentType[],\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { fetchSDK } from './store/sdk/sdk.actions';\nimport { store } from './store/store';\nimport App from './App';\n\nimport './styles/app.css';\n\nstore.dispatch(fetchSDK());\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}